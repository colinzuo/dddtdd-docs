"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[7589],{9599:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=r(74848),s=r(28453);const o={},d="Render Functions & JSX",a={id:"frontend/vue3/core/extras/render-function",title:"Render Functions & JSX",description:"Basic Usage",source:"@site/docs/00200-frontend/vue3/010-core/018-extras/040-render-function.md",sourceDirName:"00200-frontend/vue3/010-core/018-extras",slug:"/frontend/vue3/core/extras/render-function",permalink:"/dddtdd-docs/frontend/vue3/core/extras/render-function",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:40,frontMatter:{},sidebar:"docSidebar",previous:{title:"Rendering Mechanism",permalink:"/dddtdd-docs/frontend/vue3/core/extras/rendering-mechanism"},next:{title:"Why Vite",permalink:"/dddtdd-docs/frontend/vue3/vite/why"}},i={},c=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Creating Vnodes",id:"creating-vnodes",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"render-functions--jsx",children:"Render Functions & JSX"}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.h3,{id:"creating-vnodes",children:"Creating Vnodes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { h } from 'vue'\r\n\r\nconst vnode = h(\r\n  'div', // type\r\n  { id: 'foo', class: 'bar' }, // props\r\n  [\r\n    /* children */\r\n  ]\r\n)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// all arguments except the type are optional\r\nh('div')\r\nh('div', { id: 'foo' })\r\n\r\n// both attributes and properties can be used in props\r\n// Vue automatically picks the right way to assign it\r\nh('div', { class: 'bar', innerHTML: 'hello' })\r\n\r\n// props modifiers such as `.prop` and `.attr` can be added\r\n// with `.` and `^` prefixes respectively\r\nh('div', { '.name': 'some-name', '^width': '100' })\r\n\r\n// class and style have the same object / array\r\n// value support that they have in templates\r\nh('div', { class: [foo, { bar }], style: { color: 'red' } })\r\n\r\n// event listeners should be passed as onXxx\r\nh('div', { onClick: () => {} })\r\n\r\n// children can be a string\r\nh('div', { id: 'foo' }, 'hello')\r\n\r\n// props can be omitted when there are no props\r\nh('div', 'hello')\r\nh('div', [h('span', 'hello')])\r\n\r\n// children array can contain mixed vnodes and strings\r\nh('div', ['hello', h('span', 'hello')])\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var t=r(96540);const s={},o=t.createContext(s);function d(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);