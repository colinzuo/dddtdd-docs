"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[7696],{57166:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var r=s(74848),i=s(28453);const t={title:"Buffer Protocol"},d=void 0,c={id:"programming-languages/python/c-api/abstract-buffer",title:"Buffer Protocol",description:"This protocol has two sides:",source:"@site/docs/00400-programming-languages/python/c-api/0770-abstract-buffer.md",sourceDirName:"00400-programming-languages/python/c-api",slug:"/programming-languages/python/c-api/abstract-buffer",permalink:"/dddtdd-docs/programming-languages/python/c-api/abstract-buffer",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:770,frontMatter:{title:"Buffer Protocol"},sidebar:"docSidebar",previous:{title:"Iterator Protocol",permalink:"/dddtdd-docs/programming-languages/python/c-api/abstract-iter"},next:{title:"Type Objects",permalink:"/dddtdd-docs/programming-languages/python/c-api/concrete-type"}},l={},o=[{value:"Buffer structure",id:"buffer-structure",level:2},{value:"Buffer request types",id:"buffer-request-types",level:2},{value:"readonly, format",id:"readonly-format",level:3},{value:"shape, strides, suboffsets",id:"shape-strides-suboffsets",level:3},{value:"contiguity requests",id:"contiguity-requests",level:3},{value:"compound requests",id:"compound-requests",level:3},{value:"Complex arrays",id:"complex-arrays",level:2},{value:"NumPy-style: shape and strides",id:"numpy-style-shape-and-strides",level:3},{value:"PIL-style: shape, strides and suboffsets",id:"pil-style-shape-strides-and-suboffsets",level:3},{value:"Buffer-related functions",id:"buffer-related-functions",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This protocol has two sides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"on the producer side, a type can export a \u201cbuffer interface\u201d which allows objects of that type to expose information about their underlying buffer. This interface is described in the section Buffer Object Structures;"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"on the consumer side, several means are available to obtain a pointer to the raw underlying data of an object (for example a method parameter)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"There are two ways for a consumer of the buffer interface to acquire a buffer over a target object:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["call ",(0,r.jsx)(n.code,{children:"PyObject_GetBuffer()"})," with the right parameters;"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["call ",(0,r.jsx)(n.code,{children:"PyArg_ParseTuple()"})," (or one of its siblings) with one of the ",(0,r.jsx)(n.code,{children:"y*, w* or s*"})," format codes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In both cases, PyBuffer_Release() must be called when the buffer isn\u2019t needed anymore"}),"\n",(0,r.jsx)(n.h2,{id:"buffer-structure",children:"Buffer structure"}),"\n",(0,r.jsxs)(n.p,{children:["Contrary to most data types exposed by the Python interpreter, buffers are ",(0,r.jsx)(n.strong,{children:"not PyObject pointers but rather simple C structures"}),". This allows them to be created and copied very simply. When a generic wrapper around a buffer is needed, a ",(0,r.jsx)(n.code,{children:"memoryview"})," object can be created"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type Py_buffer"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"void *buf"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyObject *obj"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Py_ssize_t len"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int readonly"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Py_ssize_t itemsize"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"const char *format"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int ndim"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Py_ssize_t *shape"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Py_ssize_t *strides"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"void *internal"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"buffer-request-types",children:"Buffer request types"}),"\n",(0,r.jsx)(n.h3,{id:"readonly-format",children:"readonly, format"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_WRITABLE"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_FORMAT"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"shape-strides-suboffsets",children:"shape, strides, suboffsets"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_INDIRECT"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_STRIDES"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_ND"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_SIMPLE"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"contiguity-requests",children:"contiguity requests"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_C_CONTIGUOUS"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_F_CONTIGUOUS"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_ANY_CONTIGUOUS"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_ND"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"compound-requests",children:"compound requests"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_FULL"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_FULL_RO"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_RECORDS"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_RECORDS_RO"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_STRIDED"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_STRIDED_RO"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_CONTIG"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"PyBUF_CONTIG_RO"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"complex-arrays",children:"Complex arrays"}),"\n",(0,r.jsx)(n.h3,{id:"numpy-style-shape-and-strides",children:"NumPy-style: shape and strides"}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"ndim == 0"}),", the memory location pointed to by buf is interpreted as a scalar of size itemsize. In that case, both shape and strides are NULL."]}),"\n",(0,r.jsxs)(n.p,{children:["If strides is NULL, the array is interpreted as a ",(0,r.jsx)(n.strong,{children:"standard n-dimensional C-array"}),". Otherwise, the consumer must access an n-dimensional array as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"ptr = (char *)buf + indices[0] * strides[0] + ... + indices[n-1] * strides[n-1];\nitem = *((typeof(item) *)ptr);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pil-style-shape-strides-and-suboffsets",children:"PIL-style: shape, strides and suboffsets"}),"\n",(0,r.jsx)(n.p,{children:"In addition to the regular items, PIL-style arrays can contain pointers that must be followed in order to get to the next element in a dimension"}),"\n",(0,r.jsx)(n.h2,{id:"buffer-related-functions",children:"Buffer-related functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyObject_CheckBuffer(PyObject *obj)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyObject_GetBuffer(PyObject *exporter, Py_buffer *view, int flags)"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Send a request to exporter to ",(0,r.jsx)(n.strong,{children:"fill in view as specified by flags"}),". If the exporter cannot provide a buffer of the exact type, it MUST raise BufferError, set view->obj to NULL and return -1"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"void PyBuffer_Release(Py_buffer *view)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Py_ssize_t PyBuffer_SizeFromFormat(const char *format)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyBuffer_IsContiguous(const Py_buffer *view, char order)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"void *PyBuffer_GetPointer(const Py_buffer *view, const Py_ssize_t *indices)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyBuffer_FromContiguous(const Py_buffer *view, const void *buf, Py_ssize_t len, char fort)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyBuffer_ToContiguous(void *buf, const Py_buffer *src, Py_ssize_t len, char order)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyObject_CopyData(PyObject *dest, PyObject *src)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"void PyBuffer_FillContiguousStrides(int ndims, Py_ssize_t *shape, Py_ssize_t *strides, int itemsize, char order)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"int PyBuffer_FillInfo(Py_buffer *view, PyObject *exporter, void *buf, Py_ssize_t len, int readonly, int flags)"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var r=s(96540);const i={},t=r.createContext(i);function d(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);