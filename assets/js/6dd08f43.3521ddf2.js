"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[6728],{63075:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>r});var s=l(74848),o=l(28453);const i={},d=void 0,a={id:"frontend/vue3/element-plus/components/feedback/dialog",title:"dialog",description:"dialog-content.ts",source:"@site/docs/00200-frontend/vue3/element-plus/components/0400-feedback/0100-dialog.md",sourceDirName:"00200-frontend/vue3/element-plus/components/0400-feedback",slug:"/frontend/vue3/element-plus/components/feedback/dialog",permalink:"/dddtdd-docs/frontend/vue3/element-plus/components/feedback/dialog",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:100,frontMatter:{},sidebar:"docSidebar",previous:{title:"focus-trap",permalink:"/dddtdd-docs/frontend/vue3/element-plus/components/internal/focus-trap"},next:{title:"drawer",permalink:"/dddtdd-docs/frontend/vue3/element-plus/components/feedback/drawer"}},t={},r=[{value:"dialog-content.ts",id:"dialog-contentts",level:2},{value:"dialogContentProps",id:"dialogcontentprops",level:3},{value:"dialog-content.vue",id:"dialog-contentvue",level:2},{value:"draggable",id:"draggable",level:3},{value:"\u8bbe\u7f6ediv attribute",id:"\u8bbe\u7f6ediv-attribute",level:3},{value:"\u8bbe\u7f6eheader",id:"\u8bbe\u7f6eheader",level:3},{value:"\u8bbe\u7f6edialog body",id:"\u8bbe\u7f6edialog-body",level:3},{value:"\u8bbe\u7f6edialog footer",id:"\u8bbe\u7f6edialog-footer",level:3},{value:"packages\\theme-chalk\\src\\dialog.scss",id:"packagestheme-chalksrcdialogscss",level:2},{value:"dialog.ts",id:"dialogts",level:2},{value:"dialogProps",id:"dialogprops",level:3},{value:"dialogEmits",id:"dialogemits",level:3},{value:"use-dialog.ts",id:"use-dialogts",level:2},{value:"style",id:"style",level:3},{value:"functions",id:"functions",level:3},{value:"dialog.vue",id:"dialogvue",level:2},{value:"transition",id:"transition",level:3},{value:"overlay",id:"overlay",level:3},{value:"focus-trap",id:"focus-trap",level:3},{value:"dialog-content",id:"dialog-content",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"dialog-contentts",children:"dialog-content.ts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"dialogContentProps"}),"\n",(0,s.jsxs)(n.li,{children:["dialogContentEmits: ",(0,s.jsx)(n.code,{children:"close"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dialogcontentprops",children:"dialogContentProps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"center"}),"\n",(0,s.jsx)(n.li,{children:"alignCenter"}),"\n",(0,s.jsx)(n.li,{children:"closeIcon"}),"\n",(0,s.jsx)(n.li,{children:"customClass"}),"\n",(0,s.jsx)(n.li,{children:"draggable"}),"\n",(0,s.jsx)(n.li,{children:"fullscreen"}),"\n",(0,s.jsx)(n.li,{children:"showClose"}),"\n",(0,s.jsx)(n.li,{children:"title"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dialog-contentvue",children:"dialog-content.vue"}),"\n",(0,s.jsx)(n.h3,{id:"draggable",children:"draggable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const { dialogRef, headerRef, bodyId, ns, style } = inject(dialogInjectionKey)!\n\nconst draggable = computed(() => props.draggable)\nuseDraggable(dialogRef, headerRef, draggable)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u8bbe\u7f6ediv-attribute",children:"\u8bbe\u7f6ediv attribute"}),"\n",(0,s.jsxs)(n.p,{children:["\u8fd9\u4e2adiv\u5c31\u662f\u6574\u4e2adialog overlay\u4e0a\u7684root\uff0c\u5728\u8fd9\u91cc\u540c\u65f6\u8bbe\u7f6e\u5230inject\u8fdb\u6765\u7684ref\u4e0a\n\u5916\u4fa7\u7684overlay\u8bbe\u7f6e\u4e86",(0,s.jsx)(n.code,{children:"zindex"}),"\u548c",(0,s.jsx)(n.code,{children:"position: fixed"}),"\uff0c\u7136\u540e\u8fd9\u4e2adiv\u901a\u8fc7\u8bbe\u7f6e",(0,s.jsx)(n.code,{children:"position: relative"}),"\u6765layout"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"const composedDialogRef = composeRefs(focusTrapRef, dialogRef)"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"  <div\n    :ref=\"composedDialogRef\"\n    :class=\"[\n      ns.b(),\n      ns.is('fullscreen', fullscreen),\n      ns.is('draggable', draggable),\n      ns.is('align-center', alignCenter),\n      { [ns.m('center')]: center },\n      customClass,\n    ]\"\n    :style=\"style\"\n    tabindex=\"-1\"\n  >\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u8bbe\u7f6eheader",children:"\u8bbe\u7f6eheader"}),"\n",(0,s.jsxs)(n.p,{children:["\u663e\u793atitle\uff0c\u5982\u679c\u914d\u7f6e\u4e86",(0,s.jsx)(n.code,{children:"showClose"}),"\u5219\u663e\u793aclose button"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'    <header ref="headerRef" :class="ns.e(\'header\')">\n      <slot name="header">\n        <span role="heading" :class="ns.e(\'title\')">\n          {{ title }}\n        </span>\n      </slot>\n      <button\n        v-if="showClose"\n        :aria-label="t(\'el.dialog.close\')"\n        :class="ns.e(\'headerbtn\')"\n        type="button"\n        @click="$emit(\'close\')"\n      >\n        <el-icon :class="ns.e(\'close\')">\n          <component :is="closeIcon || Close" />\n        </el-icon>\n      </button>\n    </header>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"\u8bbe\u7f6edialog-body",children:"\u8bbe\u7f6edialog body"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'    <div :id="bodyId" :class="ns.e(\'body\')">\n      <slot />\n    </div>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"\u8bbe\u7f6edialog-footer",children:"\u8bbe\u7f6edialog footer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'    <footer v-if="$slots.footer" :class="ns.e(\'footer\')">\n      <slot name="footer" />\n    </footer>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"packagestheme-chalksrcdialogscss",children:"packages\\theme-chalk\\src\\dialog.scss"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"@include b(dialog) {\n  @include set-component-css-var('dialog', $dialog);\n\n  position: relative;\n  margin: var(#{getCssVarName('dialog-margin-top')}, 15vh) auto 50px;\n  background: getCssVar('dialog', 'bg-color');\n  border-radius: getCssVar('dialog', 'border-radius');\n  box-shadow: getCssVar('dialog', 'box-shadow');\n  box-sizing: border-box;\n  width: var(#{getCssVarName('dialog-width')}, 50%);\n\n  &:focus {\n    outline: none !important;\n  }\n\n  @include when(align-center) {\n    margin: auto;\n  }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dialogts",children:"dialog.ts"}),"\n",(0,s.jsx)(n.h3,{id:"dialogprops",children:"dialogProps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"appendToBody"}),"\n",(0,s.jsx)(n.li,{children:"beforeClose"}),"\n",(0,s.jsx)(n.li,{children:"destroyOnClose"}),"\n",(0,s.jsx)(n.li,{children:"closeOnClickModal"}),"\n",(0,s.jsx)(n.li,{children:"closeOnPressEscape"}),"\n",(0,s.jsx)(n.li,{children:"lockScroll"}),"\n",(0,s.jsx)(n.li,{children:"modal"}),"\n",(0,s.jsx)(n.li,{children:"openDelay"}),"\n",(0,s.jsx)(n.li,{children:"closeDelay"}),"\n",(0,s.jsx)(n.li,{children:"top"}),"\n",(0,s.jsx)(n.li,{children:"modelValue"}),"\n",(0,s.jsx)(n.li,{children:"modalClass"}),"\n",(0,s.jsx)(n.li,{children:"width"}),"\n",(0,s.jsx)(n.li,{children:"zIndex"}),"\n",(0,s.jsx)(n.li,{children:"trapFocus"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export const dialogProps = buildProps({\n  ...dialogContentProps,\n  appendToBody: {\n    type: Boolean,\n    default: false,\n  },\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dialogemits",children:"dialogEmits"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export const dialogEmits = {\n  open: () => true,\n  opened: () => true,\n  close: () => true,\n  closed: () => true,\n  [UPDATE_MODEL_EVENT]: (value: boolean) => isBoolean(value),\n  openAutoFocus: () => true,\n  closeAutoFocus: () => true,\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"use-dialogts",children:"use-dialog.ts"}),"\n",(0,s.jsx)(n.h3,{id:"style",children:"style"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"    const varPrefix = `--${namespace.value}-dialog` as const\n    if (!props.fullscreen) {\n      if (props.top) {\n        style[`${varPrefix}-margin-top`] = props.top\n      }\n      if (props.width) {\n        style[`${varPrefix}-width`] = addUnit(props.width)\n      }\n    }\n"})}),"\n",(0,s.jsx)(n.h3,{id:"functions",children:"functions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"  function afterEnter() {\n    emit('opened')\n  }\n\n  function afterLeave() {\n    emit('closed')\n    emit(UPDATE_MODEL_EVENT, false)\n    if (props.destroyOnClose) {\n      rendered.value = false\n    }\n  }\n\n  function beforeLeave() {\n    emit('close')\n  }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"  return {\n    afterEnter,\n    afterLeave,\n    beforeLeave,\n    handleClose,\n    onModalClick,\n    close,\n    doClose,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    onCloseRequested,\n    onFocusoutPrevented,\n    titleId,\n    bodyId,\n    closed,\n    style,\n    overlayDialogStyle,\n    rendered,\n    visible,\n    zIndex,\n  }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dialogvue",children:"dialog.vue"}),"\n",(0,s.jsx)(n.h3,{id:"transition",children:"transition"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://vuejs.org/guide/built-ins/transition.html",children:"https://vuejs.org/guide/built-ins/transition.html"})}),"\n",(0,s.jsx)(n.p,{children:"The enter or leave can be triggered by one of the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Conditional rendering via v-if"}),"\n",(0,s.jsx)(n.li,{children:"Conditional display via v-show"}),"\n",(0,s.jsxs)(n.li,{children:["Dynamic components toggling via the ",(0,s.jsx)(n.code,{children:"<component>"})," special element"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'    <transition\n      name="dialog-fade"\n      @after-enter="afterEnter"\n      @after-leave="afterLeave"\n      @before-leave="beforeLeave"\n    >\n      <el-overlay\n        v-show="visible"\n        custom-mask-event\n        :mask="modal"\n        :overlay-class="modalClass"\n        :z-index="zIndex"\n      >\n'})}),"\n",(0,s.jsx)(n.h3,{id:"overlay",children:"overlay"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"overlay"}),"\u7684child div\u88ab",(0,s.jsx)(n.code,{children:"css"}),"\u8bbe\u7f6e\u4e3a\u540c\u6837\u5168\u5c4f\uff0c\u7136\u540e\u4e8b\u4ef6\u90fd\u7ed1\u5b9a\u5728child div\u4e0a\n",(0,s.jsx)(n.code,{children:"overlay"}),"\u63a7\u5236",(0,s.jsx)(n.code,{children:"visible"}),", ",(0,s.jsx)(n.code,{children:"z-index"}),"\uff0c\u6dfb\u52a0\u80cc\u666f\u82720.5 alpha\u7684\u767d\u8272\u906e\u7f69"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'     <el-overlay\n        v-show="visible"\n        custom-mask-event\n        :mask="modal"\n        :overlay-class="modalClass"\n        :z-index="zIndex"\n      >\n        <div\n          role="dialog"\n          aria-modal="true"\n          :aria-label="title || undefined"\n          :aria-labelledby="!title ? titleId : undefined"\n          :aria-describedby="bodyId"\n          :class="`${ns.namespace.value}-overlay-dialog`"\n          :style="overlayDialogStyle"\n          @click="overlayEvent.onClick"\n          @mousedown="overlayEvent.onMousedown"\n          @mouseup="overlayEvent.onMouseup"\n        >\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"packages\\theme-chalk\\src\\dialog.scss"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".#{$namespace}-overlay-dialog {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u5224\u65ad\u662f\u5426mousedown\u548cmouseup\u90fd\u662f\u70b9\u51fb\u5728overlay\u672c\u4f53\u4e0a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const overlayEvent = useSameTarget(onModalClick)\n\n  function onModalClick() {\n    if (props.closeOnClickModal) {\n      handleClose()\n    }\n  }\n"})}),"\n",(0,s.jsx)(n.h3,{id:"focus-trap",children:"focus-trap"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u63a7\u5236focus"}),"\n",(0,s.jsxs)(n.li,{children:["\u6309esc\u952e\u65f6\u4f1a\u89e6\u53d1",(0,s.jsx)(n.code,{children:"release-requested"}),"\uff0c\u8fdb\u800c\u89e6\u53d1dialog close"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'          <el-focus-trap\n            loop\n            :trapped="visible"\n            focus-start-el="container"\n            @focus-after-trapped="onOpenAutoFocus"\n            @focus-after-released="onCloseAutoFocus"\n            @focusout-prevented="onFocusoutPrevented"\n            @release-requested="onCloseRequested"\n          >\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"  function onCloseRequested() {\n    if (props.closeOnPressEscape) {\n      handleClose()\n    }\n  }\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dialog-content",children:"dialog-content"}),"\n",(0,s.jsxs)(n.p,{children:["\u57fa\u672c\u5c31\u662f\u900f\u4f20slot\u5230",(0,s.jsx)(n.code,{children:"el-dialog-content"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'            <el-dialog-content\n              v-if="rendered"\n              ref="dialogContentRef"\n              v-bind="$attrs"\n              :custom-class="customClass"\n              :center="center"\n              :align-center="alignCenter"\n              :close-icon="closeIcon"\n              :draggable="draggable"\n              :fullscreen="fullscreen"\n              :show-close="showClose"\n              :title="title"\n              @close="handleClose"\n            >\n              <template #header>\n                <slot\n                  v-if="!$slots.title"\n                  name="header"\n                  :close="handleClose"\n                  :title-id="titleId"\n                  :title-class="ns.e(\'title\')"\n                />\n                <slot v-else name="title" />\n              </template>\n              <slot />\n              <template v-if="$slots.footer" #footer>\n                <slot name="footer" />\n              </template>\n            </el-dialog-content>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>d,x:()=>a});var s=l(96540);const o={},i=s.createContext(o);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);