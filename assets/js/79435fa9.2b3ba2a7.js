"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[9207],{63251:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(74848),a=n(28453);const i={},o=void 0,l={id:"programming-languages/golang/topics/reflection",title:"reflection",description:"The Laws of Reflection",source:"@site/docs/00400-programming-languages/golang/topics/reflection.md",sourceDirName:"00400-programming-languages/golang/topics",slug:"/programming-languages/golang/topics/reflection",permalink:"/dddtdd-docs/programming-languages/golang/topics/reflection",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,frontMatter:{},sidebar:"docSidebar",previous:{title:"interface",permalink:"/dddtdd-docs/programming-languages/golang/topics/interface"},next:{title:"template",permalink:"/dddtdd-docs/programming-languages/golang/topics/template"}},c={},s=[{value:"The Laws of Reflection",id:"the-laws-of-reflection",level:2},{value:"The representation of an interface",id:"the-representation-of-an-interface",level:3},{value:"Reflection goes from interface value to reflection object",id:"reflection-goes-from-interface-value-to-reflection-object",level:3},{value:"Reflection goes from reflection object to interface value",id:"reflection-goes-from-reflection-object-to-interface-value",level:3},{value:"To modify a reflection object, the value must be settable",id:"to-modify-a-reflection-object-the-value-must-be-settable",level:3},{value:"Structs",id:"structs",level:3},{value:"stdlib reflect",id:"stdlib-reflect",level:2}];function f(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"the-laws-of-reflection",children:"The Laws of Reflection"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://go.dev/blog/laws-of-reflection",children:"https://go.dev/blog/laws-of-reflection"})}),"\n",(0,r.jsx)(t.h3,{id:"the-representation-of-an-interface",children:"The representation of an interface"}),"\n",(0,r.jsx)(t.p,{children:"A variable of interface type stores a pair: the concrete value assigned to the variable, and that value\u2019s type descriptor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'var r io.Reader\ntty, err := os.OpenFile("/dev/tty", os.O_RDWR, 0)\nif err != nil {\n    return nil, err\n}\nr = tty\n'})}),"\n",(0,r.jsxs)(t.p,{children:["r contains, schematically, the (value, type) pair, ",(0,r.jsx)(t.code,{children:"(tty, *os.File)"})]}),"\n",(0,r.jsxs)(t.p,{children:["One important detail is that the pair inside an interface variable always has the form ",(0,r.jsx)(t.code,{children:"(value, concrete type)"})," and cannot have the form (value, interface type). Interfaces do not hold interface values"]}),"\n",(0,r.jsx)(t.h3,{id:"reflection-goes-from-interface-value-to-reflection-object",children:"Reflection goes from interface value to reflection object"}),"\n",(0,r.jsxs)(t.p,{children:["reflection is just a ",(0,r.jsx)(t.strong,{children:"mechanism to examine the type and value pair"})," stored inside an interface variable"]}),"\n",(0,r.jsxs)(t.p,{children:["two simple functions, called ",(0,r.jsx)(t.code,{children:"reflect.TypeOf"})," and ",(0,r.jsx)(t.code,{children:"reflect.ValueOf"}),", retrieve ",(0,r.jsx)(t.code,{children:"reflect.Type"})," and ",(0,r.jsx)(t.code,{children:"reflect.Value"})," pieces out of an interface value"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"// TypeOf returns the reflection Type of the value in the interface{}.\nfunc TypeOf(i interface{}) Type\n"})}),"\n",(0,r.jsx)(t.p,{children:"both Type and Value have a Kind method that returns a constant indicating what sort of item is stored: Uint, Float64, Slice, and so on"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'var x float64 = 3.4\nv := reflect.ValueOf(x)\nfmt.Println("type:", v.Type())\nfmt.Println("kind is float64:", v.Kind() == reflect.Float64)\nfmt.Println("value:", v.Float())\n'})}),"\n",(0,r.jsx)(t.p,{children:"The second property is that the Kind of a reflection object describes the underlying type, not the static type"}),"\n",(0,r.jsx)(t.h3,{id:"reflection-goes-from-reflection-object-to-interface-value",children:"Reflection goes from reflection object to interface value"}),"\n",(0,r.jsx)(t.p,{children:"Given a reflect.Value we can recover an interface value using the Interface method; in effect the method packs the type and value information back into an interface representation and returns the result"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"// Interface returns v's value as an interface{}.\nfunc (v Value) Interface() interface{}\n\ny := v.Interface().(float64) // y will have type float64.\nfmt.Println(y)\n"})}),"\n",(0,r.jsx)(t.h3,{id:"to-modify-a-reflection-object-the-value-must-be-settable",children:"To modify a reflection object, the value must be settable"}),"\n",(0,r.jsx)(t.p,{children:"Settability is determined by whether the reflection object holds the original item"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'var x float64 = 3.4\np := reflect.ValueOf(&x) // Note: take the address of x.\nfmt.Println("type of p:", p.Type())\nfmt.Println("settability of p:", p.CanSet())\n\nv := p.Elem()\nfmt.Println("settability of v:", v.CanSet())\n'})}),"\n",(0,r.jsx)(t.h3,{id:"structs",children:"Structs"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'type T struct {\n    A int\n    B string\n}\nt := T{23, "skidoo"}\ns := reflect.ValueOf(&t).Elem()\ntypeOfT := s.Type()\nfor i := 0; i < s.NumField(); i++ {\n    f := s.Field(i)\n    fmt.Printf("%d: %s %s = %v\\n", i,\n        typeOfT.Field(i).Name, f.Type(), f.Interface())\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"stdlib-reflect",children:"stdlib reflect"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://pkg.go.dev/reflect",children:"https://pkg.go.dev/reflect"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var r=n(96540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);