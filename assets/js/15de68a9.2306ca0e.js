"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[8844],{99470:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var s=t(74848),i=t(28453);const o={},r="Testing",d={id:"frontend/vue3/core/scaling-up/testing",title:"Testing",description:"Why Test?",source:"@site/docs/00200-frontend/vue3/010-core/015-scaling-up/050-testing.md",sourceDirName:"00200-frontend/vue3/010-core/015-scaling-up",slug:"/frontend/vue3/core/scaling-up/testing",permalink:"/dddtdd-docs/frontend/vue3/core/scaling-up/testing",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1721530274e3,sidebarPosition:50,frontMatter:{},sidebar:"docSidebar",previous:{title:"State Management",permalink:"/dddtdd-docs/frontend/vue3/core/scaling-up/state-management"},next:{title:"Using Vue with TypeScript",permalink:"/dddtdd-docs/frontend/vue3/core/typescript/overview"}},c={},l=[{value:"Why Test?",id:"why-test",level:2},{value:"Unit Testing",id:"unit-testing",level:2},{value:"Component Testing",id:"component-testing",level:2},{value:"Recommendation",id:"recommendation",level:3},{value:"E2E Testing",id:"e2e-testing",level:2},{value:"Visibility in headless mode",id:"visibility-in-headless-mode",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h2,{id:"why-test",children:"Why Test?"}),"\n",(0,s.jsxs)(n.p,{children:["Automated tests help you and your team build complex Vue applications quickly and confidently by ",(0,s.jsx)(n.strong,{children:"preventing regressions"})," and ",(0,s.jsx)(n.strong,{children:"encouraging you to break apart"})," your application into testable functions, modules, classes, and components"]}),"\n",(0,s.jsx)(n.h2,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://vitest.dev/",children:"Vitest"})}),"\n",(0,s.jsx)(n.h2,{id:"component-testing",children:"Component Testing"}),"\n",(0,s.jsxs)(n.p,{children:["Much of your Vue Application should be covered by a component test and we ",(0,s.jsx)(n.strong,{children:"recommend"})," that each Vue component has its own spec file"]}),"\n",(0,s.jsxs)(n.p,{children:["Component tests ",(0,s.jsx)(n.strong,{children:"should not mock"})," child components, but instead test the interactions between your component and its children by interacting with the components as a user would"]}),"\n",(0,s.jsxs)(n.p,{children:["Component tests should focus on the component's ",(0,s.jsx)(n.strong,{children:"public interfaces"})," rather than internal implementation details"]}),"\n",(0,s.jsxs)(n.p,{children:["When testing, remember to ",(0,s.jsx)(n.strong,{children:"test what a component does, not how it does it"})]}),"\n",(0,s.jsx)(n.h3,{id:"recommendation",children:"Recommendation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.cypress.io/guides/component-testing/overview",children:"Cypress Component Testing"})," for components whose expected behavior depends on properly rendering styles or triggering native DOM events"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const valueSelector = '[data-testid=stepper-value]'\r\nconst buttonSelector = '[data-testid=increment]'\r\n\r\nmount(Stepper, {\r\n  props: {\r\n    max: 1\r\n  }\r\n})\r\n\r\ncy.get(valueSelector).should('be.visible').and('contain.text', '0')\r\n  .get(buttonSelector).click()\r\n  .get(valueSelector).should('contain.text', '1')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"e2e-testing",children:"E2E Testing"}),"\n",(0,s.jsx)(n.h3,{id:"visibility-in-headless-mode",children:"Visibility in headless mode"}),"\n",(0,s.jsxs)(n.p,{children:["When end-to-end (E2E) tests are run in continuous integration/deployment pipelines, they are often run in ",(0,s.jsx)(n.strong,{children:"headless browsers"})," (i.e., no visible browser is opened for the user to watch). A critical feature of modern E2E testing frameworks is the ability to ",(0,s.jsx)(n.strong,{children:"see snapshots and/or videos"})," of the application during testing"]}),"\n",(0,s.jsxs)(n.p,{children:["Overall, we believe ",(0,s.jsx)(n.strong,{children:"Cypress"})," provides the ",(0,s.jsx)(n.strong,{children:"most complete E2E solution"})," with features like an informative graphical interface, excellent debuggability, built-in assertions, stubs, flake-resistance, parallelization, and snapshots"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);