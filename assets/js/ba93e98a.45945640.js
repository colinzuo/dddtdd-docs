"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[7963],{46006:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var s=c(74848),i=c(28453);const t={title:"Common Object Structures"},d=void 0,l={id:"programming-languages/python/c-api/structures",title:"Common Object Structures",description:"Base object types and macros",source:"@site/docs/00400-programming-languages/python/c-api/1170-structures.md",sourceDirName:"00400-programming-languages/python/c-api",slug:"/programming-languages/python/c-api/structures",permalink:"/dddtdd-docs/programming-languages/python/c-api/structures",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:1170,frontMatter:{title:"Common Object Structures"},sidebar:"docSidebar",previous:{title:"Allocating Objects on the Heap",permalink:"/dddtdd-docs/programming-languages/python/c-api/allocation"},next:{title:"Type Objects",permalink:"/dddtdd-docs/programming-languages/python/c-api/typeobj"}},r={},o=[{value:"Base object types and macros",id:"base-object-types-and-macros",level:2},{value:"Implementing functions and methods",id:"implementing-functions-and-methods",level:2},{value:"Accessing attributes of extension types",id:"accessing-attributes-of-extension-types",level:2}];function j(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"base-object-types-and-macros",children:"Base object types and macros"}),"\n",(0,s.jsx)(n.p,{children:"All Python objects ultimately share a small number of fields at the beginning of the object\u2019s representation in memory"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type PyObject"}),": In a normal \u201crelease\u201d build, it contains only the object\u2019s reference count and a pointer to the corresponding type object. Access to the members must be done by using the macros ",(0,s.jsx)(n.code,{children:"Py_REFCNT"})," and ",(0,s.jsx)(n.code,{children:"Py_TYPE"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type PyVarObject"}),": This is an extension of ",(0,s.jsx)(n.code,{children:"PyObject"})," that adds the ",(0,s.jsx)(n.code,{children:"ob_size"})," field. This is only used for objects that have some notion of length."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PyObject_HEAD"}),": ",(0,s.jsx)(n.code,{children:"PyObject ob_base;"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PyObject_VAR_HEAD"}),": ",(0,s.jsx)(n.code,{children:"PyVarObject ob_base;"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"int Py_Is(PyObject *x, PyObject *y)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"int Py_IsNone(PyObject *x)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"int Py_IsTrue(PyObject *x)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"int Py_IsFalse(PyObject *x)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PyTypeObject *Py_TYPE(PyObject *o)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"int Py_IS_TYPE(PyObject *o, PyTypeObject *type)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"void Py_SET_TYPE(PyObject *o, PyTypeObject *type)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Py_ssize_t Py_REFCNT(PyObject *o)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"void Py_SET_REFCNT(PyObject *o, Py_ssize_t refcnt)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Py_ssize_t Py_SIZE(PyVarObject *o)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"void Py_SET_SIZE(PyVarObject *o, Py_ssize_t size)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PyObject_HEAD_INIT(type)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PyVarObject_HEAD_INIT(type, size)"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementing-functions-and-methods",children:"Implementing functions and methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"type PyCFunction"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"PyObject *PyCFunction(PyObject *self,\n                      PyObject *args);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"type PyCFunctionWithKeywords"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"PyObject *PyCFunctionWithKeywords(PyObject *self,\n                                  PyObject *args,\n                                  PyObject *kwargs);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"type _PyCFunctionFast"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"PyObject *_PyCFunctionFast(PyObject *self,\n                           PyObject *const *args,\n                           Py_ssize_t nargs);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"type _PyCFunctionFastWithKeywords"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"PyObject *_PyCFunctionFastWithKeywords(PyObject *self,\n                                       PyObject *const *args,\n                                       Py_ssize_t nargs,\n                                       PyObject *kwnames);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"type PyCMethod"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"PyObject *PyCMethod(PyObject *self,\n                    PyTypeObject *defining_class,\n                    PyObject *const *args,\n                    Py_ssize_t nargs,\n                    PyObject *kwnames)\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type PyMethodDef"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"const char *ml_name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PyCFunction ml_meth"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"int ml_flags"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_VARARGS"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_KEYWORDS"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_VARARGS | METH_KEYWORDS"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"METH_FASTCALL"}),": Fast calling convention supporting only positional arguments"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_FASTCALL | METH_KEYWORDS"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_METHOD"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_METHOD | METH_FASTCALL | METH_KEYWORDS"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_NOARGS"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"METH_O"}),": Methods with a single object argument"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"METH_CLASS"}),": The method will be passed the type object as the first parameter"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"METH_STATIC"}),": The method will be passed NULL as the first parameter"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"METH_COEXIST"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"const char *ml_doc"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"accessing-attributes-of-extension-types",children:"Accessing attributes of extension types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type PyMemberDef"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"T_INT"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"T_OBJECT"}),": ",(0,s.jsx)(n.code,{children:"T_OBJECT"})," and ",(0,s.jsx)(n.code,{children:"T_OBJECT_EX"})," differ in that T_OBJECT returns ",(0,s.jsx)(n.code,{children:"None"})," if the member is ",(0,s.jsx)(n.code,{children:"NULL"})," and T_OBJECT_EX raises an ",(0,s.jsx)(n.code,{children:"AttributeError"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"T_OBJECT_EX"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"T_STRING"}),": interpreted as UTF-8"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"offset"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"flags"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"doc"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PyObject *PyMember_GetOne(const char *obj_addr, struct PyMemberDef *m)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"int PyMember_SetOne(char *obj_addr, struct PyMemberDef *m, PyObject *o)"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type PyGetSetDef"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"get"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"set"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"doc"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"closure"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"typedef PyObject *(*getter)(PyObject *, void *);\n\ntypedef int (*setter)(PyObject *, PyObject *, void *);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}},28453:(e,n,c)=>{c.d(n,{R:()=>d,x:()=>l});var s=c(96540);const i={},t=s.createContext(i);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);