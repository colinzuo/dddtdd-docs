"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[8030],{6649:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var i=t(74848),o=t(28453);const c={title:"Supporting Cyclic Garbage Collection"},r=void 0,s={id:"programming-languages/python/c-api/gcsupport",title:"Supporting Cyclic Garbage Collection",description:"To create a container type, the tpflags field of the type object must include the PyTPFLAGSHAVEGC and provide an implementation of the tptraverse handler. If instances of the type are mutable, a tpclear implementation must also be provided",source:"@site/docs/00400-programming-languages/python/c-api/1190-gcsupport.md",sourceDirName:"00400-programming-languages/python/c-api",slug:"/programming-languages/python/c-api/gcsupport",permalink:"/dddtdd-docs/programming-languages/python/c-api/gcsupport",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:1190,frontMatter:{title:"Supporting Cyclic Garbage Collection"},sidebar:"docSidebar",previous:{title:"Type Objects",permalink:"/dddtdd-docs/programming-languages/python/c-api/typeobj"},next:{title:"API and ABI Versioning",permalink:"/dddtdd-docs/programming-languages/python/c-api/apiabiversion"}},l={},d=[{value:"Constructors for container types must conform to two rules:",id:"constructors-for-container-types-must-conform-to-two-rules",level:2},{value:"deallocator for the object must conform to a similar pair of rules",id:"deallocator-for-the-object-must-conform-to-a-similar-pair-of-rules",level:2},{value:"apis",id:"apis",level:2},{value:"Controlling the Garbage Collector State",id:"controlling-the-garbage-collector-state",level:2}];function a(e){const n={code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["To create a container type, the ",(0,i.jsx)(n.code,{children:"tp_flags"})," field of the type object must include the ",(0,i.jsx)(n.code,{children:"Py_TPFLAGS_HAVE_GC"})," and provide an implementation of the ",(0,i.jsx)(n.code,{children:"tp_traverse"})," handler. If instances of the type are mutable, a ",(0,i.jsx)(n.code,{children:"tp_clear"})," implementation must also be provided"]}),"\n",(0,i.jsx)(n.h2,{id:"constructors-for-container-types-must-conform-to-two-rules",children:"Constructors for container types must conform to two rules:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The memory for the object must be allocated using ",(0,i.jsx)(n.code,{children:"PyObject_GC_New"})," or ",(0,i.jsx)(n.code,{children:"PyObject_GC_NewVar"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Once all the fields which may contain references to other containers are initialized, it must call ",(0,i.jsx)(n.code,{children:"PyObject_GC_Track()"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deallocator-for-the-object-must-conform-to-a-similar-pair-of-rules",children:"deallocator for the object must conform to a similar pair of rules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Before fields which refer to other containers are invalidated, ",(0,i.jsx)(n.code,{children:"PyObject_GC_UnTrack()"})," must be called."]}),"\n",(0,i.jsxs)(n.li,{children:["The object\u2019s memory must be deallocated using ",(0,i.jsx)(n.code,{children:"PyObject_GC_Del()"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"apis",children:"apis"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"PyObject_GC_New(TYPE, typeobj)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"PyObject_GC_NewVar(TYPE, typeobj, size)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"TYPE *PyObject_GC_Resize(TYPE, PyVarObject *op, Py_ssize_t newsize)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void PyObject_GC_Track(PyObject *op)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"int PyObject_IS_GC(PyObject *obj)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"int PyObject_GC_IsTracked(PyObject *op)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"int PyObject_GC_IsFinalized(PyObject *op)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void PyObject_GC_Del(void *op)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void PyObject_GC_UnTrack(void *op)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"typedef int (*visitproc)(PyObject *object, void *arg)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"typedef int (*traverseproc)(PyObject *self, visitproc visit, void *arg)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void Py_VISIT(PyObject *o)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"typedef int (*inquiry)(PyObject *self)"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"controlling-the-garbage-collector-state",children:"Controlling the Garbage Collector State"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Py_ssize_t PyGC_Collect(void)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"int PyGC_Enable(void)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"int PyGC_Disable(void)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"int PyGC_IsEnabled(void)"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(96540);const o={},c=i.createContext(o);function r(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);