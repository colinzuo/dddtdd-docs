"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[220],{36227:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=t(74848),o=t(28453);const i={},s=void 0,r={id:"programming-languages/python/pep/2006-3107-Function-Annotations",title:"2006-3107-Function-Annotations",description:"This PEP introduces a syntax for adding arbitrary metadata annotations to Python functions",source:"@site/docs/00400-programming-languages/python/pep/2006-3107-Function-Annotations.md",sourceDirName:"00400-programming-languages/python/pep",slug:"/programming-languages/python/pep/2006-3107-Function-Annotations",permalink:"/dddtdd-docs/programming-languages/python/pep/2006-3107-Function-Annotations",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1726186426e3,frontMatter:{},sidebar:"docSidebar",previous:{title:"2001-0257-Docstring-Conventions",permalink:"/dddtdd-docs/programming-languages/python/pep/2001-0257-Docstring-Conventions"},next:{title:"2007-3121-Extension-Module-Initialization-and-Finalization",permalink:"/dddtdd-docs/programming-languages/python/pep/2007-3121-Extension-Module-Initialization-and-Finalization"}},c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Return Values",id:"return-values",level:2},{value:"Accessing Function Annotations",id:"accessing-function-annotations",level:2}];function l(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"This PEP introduces a syntax for adding arbitrary metadata annotations to Python functions"}),"\n",(0,a.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"def foo(a: expression, b: expression = 5):\n    ...\n"})}),"\n",(0,a.jsx)(e.p,{children:"All annotation expressions are evaluated when the function definition is executed, just like default values"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"def foo(*args: expression, **kwargs: expression):\n    ...\n"})}),"\n",(0,a.jsx)(e.h2,{id:"return-values",children:"Return Values"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"def sum() -> expression:\n    ...\n"})}),"\n",(0,a.jsx)(e.h2,{id:"accessing-function-annotations",children:"Accessing Function Annotations"}),"\n",(0,a.jsxs)(e.p,{children:["Once compiled, a function\u2019s annotations are available via the function\u2019s ",(0,a.jsx)(e.code,{children:"__annotations__"})," attribute. This attribute is a mutable dictionary, mapping parameter names to an object representing the evaluated annotation expression"]})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var a=t(96540);const o={},i=a.createContext(o);function s(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);