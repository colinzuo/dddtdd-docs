"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[274],{90938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=n(74848),o=n(28453);const s={},i="Getters",a={id:"frontend/vue3/pinia/getters",title:"Getters",description:"Most of the time, getters will only rely on the state, however, they might need to use other getters. Because of this, we can get access to the whole store instance through this when defining a regular function but it is necessary to define the type of the return type (in TypeScript). This is due to a known limitation in TypeScript and doesn't affect getters defined with an arrow function nor getters not using this",source:"@site/docs/00200-frontend/vue3/040-pinia/050-getters.md",sourceDirName:"00200-frontend/vue3/040-pinia",slug:"/frontend/vue3/pinia/getters",permalink:"/dddtdd-docs/frontend/vue3/pinia/getters",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:50,frontMatter:{},sidebar:"docSidebar",previous:{title:"State",permalink:"/dddtdd-docs/frontend/vue3/pinia/state"},next:{title:"Actions",permalink:"/dddtdd-docs/frontend/vue3/pinia/actions"}},c={},d=[];function u(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"getters",children:"Getters"}),"\n",(0,r.jsxs)(t.p,{children:["Most of the time, getters will only rely on the state, however, they ",(0,r.jsx)(t.strong,{children:"might need to use other getters"}),". Because of this, we can get access to the whole store instance through this when defining a regular function ",(0,r.jsx)(t.strong,{children:"but it is necessary to define the type of the return type (in TypeScript)"}),". This is due to a known limitation in TypeScript and doesn't affect getters defined with an arrow function nor getters not using this"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"export const useCounterStore = defineStore('counter', {\r\n  state: () => ({\r\n    count: 0,\r\n  }),\r\n  getters: {\r\n    // automatically infers the return type as a number\r\n    doubleCount(state) {\r\n      return state.count * 2\r\n    },\r\n    // the return type **must** be explicitly set\r\n    doublePlusOne(): number {\r\n      // autocompletion and typings for the whole store \u2728\r\n      return this.doubleCount + 1\r\n    },\r\n  },\r\n})\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(96540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);