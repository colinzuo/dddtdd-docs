"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[7939],{82444:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var t=s(74848),o=s(28453);const r={},l="Styling Components",i={id:"frontend/cypress/component-testing/styling-components",title:"Styling Components",description:"What you'll learn",source:"@site/docs/00200-frontend/cypress/040-component-testing/030-styling-components.md",sourceDirName:"00200-frontend/cypress/040-component-testing",slug:"/frontend/cypress/component-testing/styling-components",permalink:"/dddtdd-docs/frontend/cypress/component-testing/styling-components",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1721530274e3,sidebarPosition:30,frontMatter:{},sidebar:"docSidebar",previous:{title:"Cypress Component Testing",permalink:"/dddtdd-docs/frontend/cypress/component-testing/getting-started"},next:{title:"Component Testing Config",permalink:"/dddtdd-docs/frontend/cypress/component-testing/component-framework-configuration"}},c={},p=[{value:"What you&#39;ll learn",id:"what-youll-learn",level:2},{value:"Component Support File",id:"component-support-file",level:2},{value:"Why Test Your Component&#39;s Styles?",id:"why-test-your-components-styles",level:2},{value:"Importing Stylesheets",id:"importing-stylesheets",level:2},{value:"Rules for Setting Up Your Styles",id:"rules-for-setting-up-your-styles",level:2},{value:"Global App Styles",id:"global-app-styles",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"styling-components",children:"Styling Components"}),"\n",(0,t.jsx)(n.h2,{id:"what-youll-learn",children:"What you'll learn"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How to load CSS libraries like Tailwind or Bootstrap"}),"\n",(0,t.jsx)(n.li,{children:"How to render icon fonts like Font Awesome"}),"\n",(0,t.jsx)(n.li,{children:"Where to import your application's global stylesheets"}),"\n",(0,t.jsx)(n.li,{children:"How to use indexHtmlFile to define a custom DOM mounting point"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"component-support-file",children:"Component Support File"}),"\n",(0,t.jsxs)(n.p,{children:["When you load a component or end-to-end spec file, it will ",(0,t.jsx)(n.strong,{children:"first load something called a supportFile"}),". By default, this is created for you during first-time setup of Cypress Component Testing and is located at ",(0,t.jsx)(n.code,{children:"cypress/support/component.js"})]}),"\n",(0,t.jsxs)(n.p,{children:["For component specs, you use this file to set up ",(0,t.jsx)(n.strong,{children:"page-level concerns"})," that would usually exist by the time you mount the component. Some examples include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run-time JavaScript code"})," (state management, routers, UI libraries)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Global styles"})," (style resets, Tailwind)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"why-test-your-components-styles",children:"Why Test Your Component's Styles?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"JSDom doesn't have a box model and"})," certain kinds of assertions, such as if a parent is covering a child and preventing clicks, are not possible to test without a more realistic environment."]}),"\n",(0,t.jsx)(n.p,{children:"On the other hand, browser-based runners like Cypress allow you to render your application's styles and components and allow Cypress's Driver to take advantage of the real box-model and style rendering engine"}),"\n",(0,t.jsx)(n.h2,{id:"importing-stylesheets",children:"Importing Stylesheets"}),"\n",(0,t.jsxs)(n.p,{children:["We'll go over a few methods and describe how you can quickly restructure your components to ",(0,t.jsx)(n.strong,{children:"become more testable"})]}),"\n",(0,t.jsx)(n.h2,{id:"rules-for-setting-up-your-styles",children:"Rules for Setting Up Your Styles"}),"\n",(0,t.jsx)(n.p,{children:"We expose two hooks for you to configure your styles:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["An HTML file called ",(0,t.jsx)(n.code,{children:"cypress/support/component-index.html"})]}),"\n",(0,t.jsxs)(n.li,{children:["A JavaScript support file called ",(0,t.jsx)(n.code,{children:"cypress/support/component.js"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When creating a production-like test environment, you should always mimic your own application's setup. If your application has multiple ",(0,t.jsx)(n.code,{children:"<link>"})," tags to load fonts or other stylesheets within the head, ensure that the ",(0,t.jsx)(n.code,{children:"cypress/support/component-index.html"})," file contains the same ",(0,t.jsx)(n.code,{children:"<link>"})," tags. The same logic follows for any styles loaded in your Application's ",(0,t.jsx)(n.code,{children:"main.js"})," file. If you import a ",(0,t.jsx)(n.code,{children:"./styles.css"})," at the top of your ",(0,t.jsx)(n.code,{children:"main.js"})," file, make sure to import it in your ",(0,t.jsx)(n.code,{children:"cypress/support/component.js"})," file"]}),"\n",(0,t.jsxs)(n.p,{children:["For this reason, it's ",(0,t.jsx)(n.strong,{children:"strongly suggested"})," to make a ",(0,t.jsx)(n.code,{children:"src/setup.js"})," file that will be re-used in your ",(0,t.jsx)(n.code,{children:"main.js"})," entrypoint as well as in your test setup. An example project structure would look like so"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"> /cypress\r\n>   /support\r\n>    /component.js\r\n> /src\r\n>  /main.js\r\n>  /main.css\r\n>  /setup.js\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The contents of ",(0,t.jsx)(n.code,{children:"setup.js"})," may look like so"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import '~normalize/normalize.css'\r\nimport 'font-awesome'\r\nimport './main.css'\r\n\r\nexport const createStore = () => {\r\n  return /* store */\r\n}\r\n\r\nexport const createRouter = () => {\r\n  return /* router */\r\n}\r\n\r\nexport const createApp = () => {\r\n  return <App router={createRouter()} store={createStore()}></App>\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"global-app-styles",children:"Global App Styles"}),"\n",(0,t.jsx)(n.p,{children:"Your global application styles are usually in one of the following places:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"styles.css"})," file you import within the head of your application"]}),"\n",(0,t.jsxs)(n.li,{children:["Within a root-level component like App.jsx, ",(0,t.jsx)(n.code,{children:"App.vue"}),", App.svelte, etc"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Decouple your Root CSS from your App or Entrypoint component by pulling out these global styles into a top-level stylesheet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"/* App.vue */ <style src=\"./app.css\" />\r\n\r\n/* cypress/support/component.js */ import '../../src/app.css'\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Within the ",(0,t.jsx)(n.code,{children:"main.js"})," file of your application (which subsequently mounts your root-level component)"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var t=s(96540);const o={},r=t.createContext(o);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);