"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[3144],{36675:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var i=t(74848),s=t(28453);const o={},d="Building C and C++ Extensions",r={id:"programming-languages/python/extending/building",title:"Building C and C++ Extensions",description:"https://docs.python.org/3.11/extending/building.html",source:"@site/docs/00400-programming-languages/python/extending/0400-building.md",sourceDirName:"00400-programming-languages/python/extending",slug:"/programming-languages/python/extending/building",permalink:"/dddtdd-docs/programming-languages/python/extending/building",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:400,frontMatter:{},sidebar:"docSidebar",previous:{title:"Defining Extension Types: Assorted Topics",permalink:"/dddtdd-docs/programming-languages/python/extending/newtypes"},next:{title:"Descriptor Guide",permalink:"/dddtdd-docs/programming-languages/python/how-to/descriptor"}},a={},l=[{value:"Building C and C++ Extensions with distutils",id:"building-c-and-c-extensions-with-distutils",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"building-c-and-c-extensions",children:"Building C and C++ Extensions"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://docs.python.org/3.11/extending/building.html",children:"https://docs.python.org/3.11/extending/building.html"})}),"\n",(0,i.jsxs)(e.p,{children:["A C extension for CPython is a ",(0,i.jsx)(e.strong,{children:"shared library"})," (e.g. a ",(0,i.jsx)(e.code,{children:".so"})," file on Linux, ",(0,i.jsx)(e.code,{children:".pyd"})," on Windows), which exports an initialization function."]}),"\n",(0,i.jsxs)(e.p,{children:["To be importable, the shared library must be available on PYTHONPATH, and ",(0,i.jsx)(e.strong,{children:"must be named after the module name, with an appropriate extension"})]}),"\n",(0,i.jsx)(e.h2,{id:"building-c-and-c-extensions-with-distutils",children:"Building C and C++ Extensions with distutils"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"python setup.py build\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from distutils.core import setup, Extension\n\nmodule1 = Extension('demo',\n                    define_macros = [('MAJOR_VERSION', '1'),\n                                     ('MINOR_VERSION', '0')],\n                    include_dirs = ['/usr/local/include'],\n                    libraries = ['tcl83'],\n                    library_dirs = ['/usr/local/lib'],\n                    sources = ['demo.c'])\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>d,x:()=>r});var i=t(96540);const s={},o=i.createContext(s);function d(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:d(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);