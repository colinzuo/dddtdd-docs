"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[6445],{79766:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>r});var i=t(74848),l=t(28453);const s={},d="Form Input Bindings",o={id:"frontend/vue3/core/essentials/form-input-bindings",title:"Form Input Bindings",description:"v-model can be used on inputs of different types, `, and ` elements. It automatically expands to different DOM property and event pairs based on the element it is used on",source:"@site/docs/00200-frontend/vue3/010-core/011-essentials/090-form-input-bindings.md",sourceDirName:"00200-frontend/vue3/010-core/011-essentials",slug:"/frontend/vue3/core/essentials/form-input-bindings",permalink:"/dddtdd-docs/frontend/vue3/core/essentials/form-input-bindings",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:90,frontMatter:{},sidebar:"docSidebar",previous:{title:"Event Handling",permalink:"/dddtdd-docs/frontend/vue3/core/essentials/event-handling"},next:{title:"Lifecycle Hooks",permalink:"/dddtdd-docs/frontend/vue3/core/essentials/lifecycle-hooks"}},c={},r=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Text",id:"text",level:3},{value:"Multiline text",id:"multiline-text",level:3},{value:"Checkbox",id:"checkbox",level:3},{value:"Radio",id:"radio",level:3},{value:"Select",id:"select",level:3},{value:"Value Bindings",id:"value-bindings",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"form-input-bindings",children:"Form Input Bindings"}),"\n",(0,i.jsxs)(n.p,{children:["v-model can be used on inputs of different types, ",(0,i.jsx)(n.code,{children:"<textarea>"}),", and ",(0,i.jsx)(n.code,{children:"<select>"})," elements. It automatically expands to different DOM property and event pairs based on the element it is used on"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<input>"})," with text types and ",(0,i.jsx)(n.code,{children:"<textarea>"})," elements use ",(0,i.jsx)(n.code,{children:"value property"})," and ",(0,i.jsx)(n.code,{children:"input event"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'<input type="checkbox">'})," and ",(0,i.jsx)(n.code,{children:'<input type="radio">'})," use ",(0,i.jsx)(n.code,{children:"checked property"})," and ",(0,i.jsx)(n.code,{children:"change event"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<select>"})," uses value as a prop and change as an event"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<input\r\n  :value="text"\r\n  @input="event => text = event.target.value">\r\n\r\n<input v-model="text">\n'})}),"\n",(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(n.h3,{id:"text",children:"Text"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<p>Message is: {{ message }}</p>\r\n<input v-model="message" placeholder="edit me" />\n'})}),"\n",(0,i.jsx)(n.h3,{id:"multiline-text",children:"Multiline text"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<span>Multiline message is:</span>\r\n<p style="white-space: pre-line;">{{ message }}</p>\r\n<textarea v-model="message" placeholder="add multiple lines"></textarea>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"checkbox",children:"Checkbox"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<input type="checkbox" id="checkbox" v-model="checked" />\r\n<label for="checkbox">{{ checked }}</label>\r\n\r\n<div>Checked names: {{ checkedNames }}</div>\r\n\r\n<input type="checkbox" id="jack" value="Jack" v-model="checkedNames" />\r\n<label for="jack">Jack</label>\r\n\r\n<input type="checkbox" id="john" value="John" v-model="checkedNames" />\r\n<label for="john">John</label>\r\n\r\n<input type="checkbox" id="mike" value="Mike" v-model="checkedNames" />\r\n<label for="mike">Mike</label>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"radio",children:"Radio"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<input type="radio" id="one" value="One" v-model="picked" />\r\n<input type="radio" id="two" value="Two" v-model="picked" />\n'})}),"\n",(0,i.jsx)(n.h3,{id:"select",children:"Select"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<select v-model="selected">\r\n  <option disabled value="">Please select one</option>\r\n  <option>A</option>\r\n  <option>B</option>\r\n  <option>C</option>\r\n</select>\r\n\r\n<select v-model="selected">\r\n  <option v-for="option in options" :value="option.value">\r\n    {{ option.text }}\r\n  </option>\r\n</select>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"value-bindings",children:"Value Bindings"}),"\n",(0,i.jsxs)(n.p,{children:["using ",(0,i.jsx)(n.code,{children:"v-bind"})," allows us to bind the input value to non-string values"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<select v-model="selected">\r\n  \x3c!-- inline object literal --\x3e\r\n  <option :value="{ number: 123 }">123</option>\r\n</select>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var i=t(96540);const l={},s=i.createContext(l);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);