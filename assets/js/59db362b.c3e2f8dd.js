"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[1072],{41792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var r=n(74848),o=n(28453);const s={},i="Defining a Store",c={id:"frontend/vue3/pinia/defining-a-store",title:"Defining a Store",description:"defineStore() accepts two distinct values for its second argument: a Setup function or an Options object",source:"@site/docs/00200-frontend/vue3/040-pinia/030-defining-a-store.md",sourceDirName:"00200-frontend/vue3/040-pinia",slug:"/frontend/vue3/pinia/defining-a-store",permalink:"/dddtdd-docs/frontend/vue3/pinia/defining-a-store",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:30,frontMatter:{},sidebar:"docSidebar",previous:{title:"getting-started",permalink:"/dddtdd-docs/frontend/vue3/pinia/getting-started"},next:{title:"State",permalink:"/dddtdd-docs/frontend/vue3/pinia/state"}},d={},a=[{value:"Setup Stores",id:"setup-stores",level:2},{value:"Using the store",id:"using-the-store",level:2},{value:"Destructuring from a Store",id:"destructuring-from-a-store",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"defining-a-store",children:"Defining a Store"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"defineStore()"})," accepts two distinct values for its second argument: a ",(0,r.jsx)(t.strong,{children:"Setup function"})," or an ",(0,r.jsx)(t.strong,{children:"Options object"})]}),"\n",(0,r.jsx)(t.h2,{id:"setup-stores",children:"Setup Stores"}),"\n",(0,r.jsxs)(t.p,{children:["Similar to the ",(0,r.jsx)(t.strong,{children:"Vue Composition API's setup function"}),", we can pass in a function that defines reactive properties and methods and returns an object with the properties and methods we want to expose"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"export const useCounterStore = defineStore('counter', () => {\r\n  const count = ref(0)\r\n  const name = ref('Eduardo')\r\n  const doubleCount = computed(() => count.value * 2)\r\n  function increment() {\r\n    count.value++\r\n  }\r\n\r\n  return { count, name, doubleCount, increment }\r\n})\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Setup stores bring a lot more flexibility than Option Stores as you can ",(0,r.jsx)(t.strong,{children:"create watchers within a store and freely use any composable"})]}),"\n",(0,r.jsx)(t.h2,{id:"using-the-store",children:"Using the store"}),"\n",(0,r.jsxs)(t.p,{children:["We are defining a store because the store ",(0,r.jsx)(t.strong,{children:"won't be created until"})," ",(0,r.jsx)(t.code,{children:"use...Store()"})," is called inside of ",(0,r.jsx)(t.code,{children:"setup()"})]}),"\n",(0,r.jsxs)(t.p,{children:["Once the store is instantiated, you can ",(0,r.jsx)(t.strong,{children:"access any property defined in state, getters, and actions directly"})," on the store"]}),"\n",(0,r.jsxs)(t.p,{children:["Note that ",(0,r.jsx)(t.strong,{children:"store is an object wrapped with reactive"}),", meaning there is no need to write ",(0,r.jsx)(t.code,{children:".value"})," after getters but,\r\nlike props in setup, we ",(0,r.jsx)(t.strong,{children:"cannot destructure it"})]}),"\n",(0,r.jsx)(t.h2,{id:"destructuring-from-a-store",children:"Destructuring from a Store"}),"\n",(0,r.jsxs)(t.p,{children:["In order to extract properties from the store while keeping its reactivity, you need to use ",(0,r.jsx)(t.code,{children:"storeToRefs()"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"<script setup>\r\nimport { useCounterStore } from '@/stores/counter'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nconst store = useCounterStore()\r\n// `name` and `doubleCount` are reactive refs\r\n// This will also extract refs for properties added by plugins\r\n// but skip any action or non reactive (non ref/reactive) property\r\nconst { name, doubleCount } = storeToRefs(store)\r\n// the increment action can just be destructured\r\nconst { increment } = store\r\n<\/script>\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(96540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);