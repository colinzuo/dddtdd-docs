"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[2618],{92427:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var r=s(74848),i=s(28453);const t={},o="mocha",l={id:"frontend/mocha/mochajs",title:"mocha",description:"Mocha is a feature-rich JavaScript test framework running on Node.js and in the browser, making asynchronous testing simple and fun. Mocha tests run serially, allowing for flexible and accurate reporting, while mapping uncaught exceptions to the correct test cases",source:"@site/docs/00200-frontend/mocha/010-mochajs.md",sourceDirName:"00200-frontend/mocha",slug:"/frontend/mocha/mochajs",permalink:"/dddtdd-docs/frontend/mocha/mochajs",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1721530274e3,sidebarPosition:10,frontMatter:{},sidebar:"docSidebar",previous:{title:"Visual Testing",permalink:"/dddtdd-docs/frontend/cypress/tooling/visual-testing"},next:{title:"\u540e\u7aef",permalink:"/dddtdd-docs/backend"}},c={},a=[{value:"INSTALLATION",id:"installation",level:2},{value:"GETTING STARTED",id:"getting-started",level:2},{value:"RUN CYCLE OVERVIEW",id:"run-cycle-overview",level:2},{value:"ASSERTIONS",id:"assertions",level:2},{value:"ASYNCHRONOUS CODE",id:"asynchronous-code",level:2},{value:"WORKING WITH PROMISES",id:"working-with-promises",level:2},{value:"USING ASYNC / AWAIT",id:"using-async--await",level:2},{value:"HOOKS",id:"hooks",level:2},{value:"DESCRIBING HOOKS",id:"describing-hooks",level:2},{value:"ASYNCHRONOUS HOOKS",id:"asynchronous-hooks",level:2},{value:"ROOT-LEVEL HOOKS",id:"root-level-hooks",level:2},{value:"EXCLUSIVE TESTS",id:"exclusive-tests",level:2},{value:"INCLUSIVE TESTS",id:"inclusive-tests",level:2},{value:"RETRY TESTS",id:"retry-tests",level:2},{value:"DYNAMICALLY GENERATING TESTS",id:"dynamically-generating-tests",level:2},{value:"TIMEOUTS",id:"timeouts",level:2},{value:"ROOT HOOK PLUGINS",id:"root-hook-plugins",level:2},{value:"DEFINING A ROOT HOOK PLUGIN",id:"defining-a-root-hook-plugin",level:3},{value:"GLOBAL FIXTURES",id:"global-fixtures",level:2},{value:"GLOBAL SETUP FIXTURES",id:"global-setup-fixtures",level:3},{value:"GLOBAL TEARDOWN FIXTURES",id:"global-teardown-fixtures",level:3},{value:"INTERFACES",id:"interfaces",level:2},{value:"BDD",id:"bdd",level:3},{value:"TDD",id:"tdd",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"mocha",children:"mocha"}),"\n",(0,r.jsxs)(n.p,{children:["Mocha is a feature-rich JavaScript test framework running on Node.js and in the browser, making asynchronous testing simple and fun. Mocha tests run ",(0,r.jsx)(n.strong,{children:"serially"}),", allowing for ",(0,r.jsx)(n.strong,{children:"flexible and accurate reporting"}),", while mapping uncaught exceptions to the correct test cases"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"INSTALLATION"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev mocha\n"})}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"GETTING STARTED"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"var assert = require('assert');\r\ndescribe('Array', function () {\r\n  describe('#indexOf()', function () {\r\n    it('should return -1 when the value is not present', function () {\r\n      assert.equal([1, 2, 3].indexOf(4), -1);\r\n    });\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./node_modules/mocha/bin/mocha.js\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"scripts": {\r\n  "test": "mocha"\r\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"run-cycle-overview",children:"RUN CYCLE OVERVIEW"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User (that\u2019s you) executes mocha"}),"\n",(0,r.jsx)(n.li,{children:"Loads options from config files, if present"}),"\n",(0,r.jsx)(n.li,{children:"Mocha processes any command-line options provided (see section on configuration merging for details)"}),"\n",(0,r.jsxs)(n.li,{children:["If known flags for the node executable are found:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mocha will spawn node in a child process, executing itself with these flags"}),"\n",(0,r.jsx)(n.li,{children:"Otherwise, Mocha does not spawn a child process"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Mocha loads modules specified by --require","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If a file loaded this way contains known Mocha-specific exports (e.g., root hook plugins), Mocha \u201cregisters\u201d these"}),"\n",(0,r.jsx)(n.li,{children:"If not, Mocha ignores any exports of a --require\u2019d module"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Mocha validates any custom reporters or interfaces which were loaded via --require or otherwise"}),"\n",(0,r.jsx)(n.li,{children:"Mocha discovers test files; when given no files or directories, it finds files with extensions .js, .mjs or .cjs in the test directory (but not its children), relative to the current working directory"}),"\n",(0,r.jsxs)(n.li,{children:["The (default) bdd interface loads the test files in no particular order, which are given an interface-specific global context (this is how, e.g., describe() ends up as a global in a test file)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When a test file is loaded, Mocha executes all of its suites and finds\u2013but does not execute\u2013any hooks and tests therein."}),"\n",(0,r.jsx)(n.li,{children:"Top-level hooks, tests and suites are all made members of an \u201cinvisible\u201d root suite; there is only one root suite for the entire process"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Mocha runs global setup fixtures, if any"}),"\n",(0,r.jsx)(n.li,{children:"Starting with the \u201croot\u201d suite, Mocha executes:"}),"\n",(0,r.jsx)(n.li,{children:"Any \u201cbefore all\u201d hooks (for the root suite, this only happens once; see root hook plugins)"}),"\n",(0,r.jsxs)(n.li,{children:["For each test, Mocha executes:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Any \u201cbefore each\u201d hooks"}),"\n",(0,r.jsx)(n.li,{children:"The test (and reports the result)"}),"\n",(0,r.jsx)(n.li,{children:"Any \u201cafter each\u201d hooks"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"If the current suite has a child suite, repeat the steps in 10. for each child suite; each child suite inherits any \u201cbefore each\u201d and \u201cafter each\u201d hooks defined in its parent"}),"\n",(0,r.jsx)(n.li,{children:"Any \u201cafter all\u201d hooks (for the root suite, this only happens once; see root hook plugins)"}),"\n",(0,r.jsx)(n.li,{children:"Mocha prints a final summary/epilog, if applicable"}),"\n",(0,r.jsx)(n.li,{children:"Mocha runs global teardown fixtures, if any"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"assertions",children:"ASSERTIONS"}),"\n",(0,r.jsxs)(n.p,{children:["Mocha allows you to use any assertion library you wish. In the above example, we\u2019re using Node.js\u2019 built-in assert module \u2014 but ",(0,r.jsx)(n.strong,{children:"generally, if it throws an Error, it will work!"})]}),"\n",(0,r.jsx)(n.h2,{id:"asynchronous-code",children:"ASYNCHRONOUS CODE"}),"\n",(0,r.jsxs)(n.p,{children:["By adding an argument (usually named done) to ",(0,r.jsx)(n.code,{children:"it()"})," to a test callback, Mocha will know that it should ",(0,r.jsx)(n.strong,{children:"wait for this function to be called"})," to complete the test"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"describe('User', function () {\r\n  describe('#save()', function () {\r\n    it('should save without error', function (done) {\r\n      var user = new User('Luna');\r\n      user.save(function (err) {\r\n        if (err) done(err);\r\n        else done();\r\n      });\r\n    });\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"working-with-promises",children:"WORKING WITH PROMISES"}),"\n",(0,r.jsxs)(n.p,{children:["Alternately, instead of using the ",(0,r.jsx)(n.code,{children:"done()"})," callback, you may ",(0,r.jsx)(n.strong,{children:"return a Promise"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"beforeEach(function () {\r\n  return db.clear().then(function () {\r\n    return db.save([tobi, loki, jane]);\r\n  });\r\n});\r\n\r\ndescribe('#find()', function () {\r\n  it('respond with matching records', function () {\r\n    return db.find({type: 'User'}).should.eventually.have.length(3);\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"using-async--await",children:"USING ASYNC / AWAIT"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"beforeEach(async function () {\r\n  await db.clear();\r\n  await db.save([tobi, loki, jane]);\r\n});\r\n\r\ndescribe('#find()', function () {\r\n  it('responds with matching records', async function () {\r\n    const users = await db.find({type: 'User'});\r\n    users.should.have.length(3);\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"hooks",children:"HOOKS"}),"\n",(0,r.jsxs)(n.p,{children:["With its default \u201cBDD\u201d-style interface, Mocha provides the hooks ",(0,r.jsx)(n.code,{children:"before()"}),", ",(0,r.jsx)(n.code,{children:"after()"}),", ",(0,r.jsx)(n.code,{children:"beforeEach()"}),", and ",(0,r.jsx)(n.code,{children:"afterEach()"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"describe('hooks', function () {\r\n  before(function () {\r\n    // runs once before the first test in this block\r\n  });\r\n\r\n  after(function () {\r\n    // runs once after the last test in this block\r\n  });\r\n\r\n  beforeEach(function () {\r\n    // runs before each test in this block\r\n  });\r\n\r\n  afterEach(function () {\r\n    // runs after each test in this block\r\n  });\r\n\r\n  // test cases\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"describing-hooks",children:"DESCRIBING HOOKS"}),"\n",(0,r.jsx)(n.p,{children:"Any hook can be invoked with an optional description, making it easier to pinpoint errors in your tests. If a hook is given a named function, that name will be used if no description is supplied"}),"\n",(0,r.jsx)(n.h2,{id:"asynchronous-hooks",children:"ASYNCHRONOUS HOOKS"}),"\n",(0,r.jsxs)(n.p,{children:["All hooks (",(0,r.jsx)(n.code,{children:"before()"}),", ",(0,r.jsx)(n.code,{children:"after()"}),", ",(0,r.jsx)(n.code,{children:"beforeEach()"}),", ",(0,r.jsx)(n.code,{children:"afterEach()"}),") may be sync or async as well, behaving much like a regular test-case"]}),"\n",(0,r.jsx)(n.h2,{id:"root-level-hooks",children:"ROOT-LEVEL HOOKS"}),"\n",(0,r.jsxs)(n.p,{children:["A hook defined at the top scope of a test file (outside of a suite) is a ",(0,r.jsx)(n.strong,{children:"root hook"})]}),"\n",(0,r.jsx)(n.h2,{id:"exclusive-tests",children:"EXCLUSIVE TESTS"}),"\n",(0,r.jsxs)(n.p,{children:["The exclusivity feature allows you to run only the specified suite or test-case by appending ",(0,r.jsx)(n.code,{children:".only()"})," to the function"]}),"\n",(0,r.jsx)(n.h2,{id:"inclusive-tests",children:"INCLUSIVE TESTS"}),"\n",(0,r.jsxs)(n.p,{children:["This feature is the inverse of ",(0,r.jsx)(n.code,{children:".only()"}),". By appending ",(0,r.jsx)(n.code,{children:".skip()"}),", you may tell Mocha to ignore test case(s). Anything skipped will be marked as pending, and reported as such"]}),"\n",(0,r.jsxs)(n.p,{children:["You may also skip at runtime using ",(0,r.jsx)(n.code,{children:"this.skip()"})]}),"\n",(0,r.jsxs)(n.p,{children:["To skip multiple tests in this manner, use ",(0,r.jsx)(n.code,{children:"this.skip()"})," in a \u201cbefore all\u201d hook"]}),"\n",(0,r.jsx)(n.h2,{id:"retry-tests",children:"RETRY TESTS"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"describe('retries', function () {\r\n  // Retry all tests in this suite up to 4 times\r\n  this.retries(4);\r\n\r\n  beforeEach(function () {\r\n    browser.get('http://www.yahoo.com');\r\n  });\r\n\r\n  it('should succeed on the 3rd try', function () {\r\n    // Specify this test to only retry up to 2 times\r\n    this.retries(2);\r\n    expect($('.foo').isDisplayed()).to.eventually.be.true;\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dynamically-generating-tests",children:"DYNAMICALLY GENERATING TESTS"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const assert = require('assert');\r\n\r\nfunction add(args) {\r\n  return args.reduce((prev, curr) => prev + curr, 0);\r\n}\r\n\r\ndescribe('add()', function () {\r\n  const tests = [\r\n    {args: [1, 2], expected: 3},\r\n    {args: [1, 2, 3], expected: 6},\r\n    {args: [1, 2, 3, 4], expected: 10}\r\n  ];\r\n\r\n  tests.forEach(({args, expected}) => {\r\n    it(`correctly adds ${args.length} args`, function () {\r\n      const res = add(args);\r\n      assert.strictEqual(res, expected);\r\n    });\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"timeouts",children:"TIMEOUTS"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"describe('a suite of tests', function () {\r\n  this.timeout(500);\r\n\r\n  it('should take less than 500ms', function (done) {\r\n    setTimeout(done, 300);\r\n  });\r\n\r\n  it('should take less than 500ms as well', function (done) {\r\n    setTimeout(done, 250);\r\n  });\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"root-hook-plugins",children:"ROOT HOOK PLUGINS"}),"\n",(0,r.jsxs)(n.p,{children:["In some cases, you may want a hook before (or after) every test in every file. These are called ",(0,r.jsx)(n.strong,{children:"root hooks"})]}),"\n",(0,r.jsxs)(n.p,{children:["A Root Hook Plugin is a JavaScript file loaded via ",(0,r.jsx)(n.code,{children:"--require"})," which \u201cregisters\u201d one or more root hooks to be used across all test files"]}),"\n",(0,r.jsx)(n.h3,{id:"defining-a-root-hook-plugin",children:"DEFINING A ROOT HOOK PLUGIN"}),"\n",(0,r.jsxs)(n.p,{children:["A Root Hook Plugin file is a script which exports (via ",(0,r.jsx)(n.code,{children:"module.exports"}),") a ",(0,r.jsx)(n.code,{children:"mochaHooks"})," property. It is loaded via ",(0,r.jsx)(n.code,{children:"--require <file>"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// test/hooks.mjs\r\n\r\nexport const mochaHooks = {\r\n  beforeEach(done) {\r\n    // do something before every test\r\n    done();\r\n  }\r\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"global-fixtures",children:"GLOBAL FIXTURES"}),"\n",(0,r.jsx)(n.p,{children:"At first glance, global fixtures seem similar to root hooks. However, unlike root hooks, global fixtures:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Are guaranteed to execute once and only once"}),"\n",(0,r.jsx)(n.li,{children:"Work identically parallel mode, watch mode, and serial mode"}),"\n",(0,r.jsx)(n.li,{children:"Do not share a context with tests, suites, or other hooks"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"global-setup-fixtures",children:"GLOBAL SETUP FIXTURES"}),"\n",(0,r.jsxs)(n.p,{children:["To create a global setup fixture, export ",(0,r.jsx)(n.code,{children:"mochaGlobalSetup"})," from a script"]}),"\n",(0,r.jsxs)(n.p,{children:["Global setup fixtures and global teardown fixtures share a context, which means we can add properties to the context object (",(0,r.jsx)(n.code,{children:"this"}),") in the setup fixture, and reference them later in the teardown fixture"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// fixtures.mjs\r\n\r\n// can be async or not\r\nexport async function mochaGlobalSetup() {\r\n  this.server = await startSomeServer({port: process.env.TEST_PORT});\r\n  console.log(`server running on port ${this.server.port}`);\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To use it, load this file when running Mocha via ",(0,r.jsx)(n.code,{children:"mocha --require fixtures.cjs"})]}),"\n",(0,r.jsx)(n.h3,{id:"global-teardown-fixtures",children:"GLOBAL TEARDOWN FIXTURES"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// fixtures.mjs, cont'd\r\n\r\n// can be async or not\r\nexport async function mochaGlobalTeardown() {\r\n  await this.server.stop();\r\n  console.log('server stopped!');\r\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"interfaces",children:"INTERFACES"}),"\n",(0,r.jsxs)(n.p,{children:["Mocha\u2019s \u201cinterface\u201d system allows developers to choose their style of DSL. Mocha has ",(0,r.jsx)(n.strong,{children:"BDD, TDD, Exports, QUnit and Require-style interfaces"})]}),"\n",(0,r.jsx)(n.h3,{id:"bdd",children:"BDD"}),"\n",(0,r.jsxs)(n.p,{children:["The BDD interface provides ",(0,r.jsx)(n.code,{children:"describe()"}),", ",(0,r.jsx)(n.code,{children:"context()"}),", ",(0,r.jsx)(n.code,{children:"it()"}),", ",(0,r.jsx)(n.code,{children:"specify()"}),", ",(0,r.jsx)(n.code,{children:"before()"}),", ",(0,r.jsx)(n.code,{children:"after()"}),", ",(0,r.jsx)(n.code,{children:"beforeEach()"}),", and ",(0,r.jsx)(n.code,{children:"afterEach()"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"context()"})," is just an alias for ",(0,r.jsx)(n.code,{children:"describe()"}),", and behaves the same way; it provides a way to keep tests easier to read and organized. Similarly, ",(0,r.jsx)(n.code,{children:"specify()"})," is an alias for ",(0,r.jsx)(n.code,{children:"it()"})]}),"\n",(0,r.jsx)(n.h3,{id:"tdd",children:"TDD"}),"\n",(0,r.jsxs)(n.p,{children:["The TDD interface provides ",(0,r.jsx)(n.code,{children:"suite()"}),", ",(0,r.jsx)(n.code,{children:"test()"}),", ",(0,r.jsx)(n.code,{children:"suiteSetup()"}),", ",(0,r.jsx)(n.code,{children:"suiteTeardown()"}),", ",(0,r.jsx)(n.code,{children:"setup()"}),", and ",(0,r.jsx)(n.code,{children:"teardown()"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"suite('Array', function () {\r\n  setup(function () {\r\n    // ...\r\n  });\r\n\r\n  suite('#indexOf()', function () {\r\n    test('should return -1 when not present', function () {\r\n      assert.equal(-1, [1, 2, 3].indexOf(4));\r\n    });\r\n  });\r\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(96540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);