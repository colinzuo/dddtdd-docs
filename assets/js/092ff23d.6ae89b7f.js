"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[4359],{65044:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(74848),a=t(28453);const o={},s=void 0,i={id:"programming-languages/golang/gin/context",title:"context",description:"Next",source:"@site/docs/00400-programming-languages/golang/gin/0200-context.md",sourceDirName:"00400-programming-languages/golang/gin",slug:"/programming-languages/golang/gin/context",permalink:"/dddtdd-docs/programming-languages/golang/gin/context",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:200,frontMatter:{},sidebar:"docSidebar",previous:{title:"official-doc",permalink:"/dddtdd-docs/programming-languages/golang/gin/official-doc"},next:{title:"logger",permalink:"/dddtdd-docs/programming-languages/golang/gin/logger"}},l={},c=[{value:"Next",id:"next",level:2},{value:"IsAborted",id:"isaborted",level:2},{value:"Abort",id:"abort",level:2},{value:"Error",id:"error",level:2},{value:"Set",id:"set",level:2},{value:"Get",id:"get",level:2},{value:"GetString",id:"getstring",level:2},{value:"Deadline",id:"deadline",level:2},{value:"Done",id:"done",level:2},{value:"Value",id:"value",level:2}];function d(e){const n={code:"code",h2:"h2",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"next",children:"Next"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Next should be used only inside middleware.\n// It executes the pending handlers in the chain inside the calling handler.\n// See example in GitHub.\nfunc (c *Context) Next() {\n\tc.index++\n\tfor c.index < int8(len(c.handlers)) {\n\t\tc.handlers[c.index](c)\n\t\tc.index++\n\t}\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"isaborted",children:"IsAborted"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// IsAborted returns true if the current context was aborted.\nfunc (c *Context) IsAborted() bool {\n\treturn c.index >= abortIndex\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"abort",children:"Abort"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Abort prevents pending handlers from being called. Note that this will not stop the current handler.\n// Let's say you have an authorization middleware that validates that the current request is authorized.\n// If the authorization fails (ex: the password does not match), call Abort to ensure the remaining handlers\n// for this request are not called.\nfunc (c *Context) Abort() {\n\tc.index = abortIndex\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error",children:"Error"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// Error attaches an error to the current context. The error is pushed to a list of errors.\n// It\'s a good idea to call Error for each error that occurred during the resolution of a request.\n// A middleware can be used to collect all the errors and push them to a database together,\n// print a log, or append it in the HTTP response.\n// Error will panic if err is nil.\nfunc (c *Context) Error(err error) *Error {\n\tif err == nil {\n\t\tpanic("err is nil")\n\t}\n\n\tvar parsedError *Error\n\tok := errors.As(err, &parsedError)\n\tif !ok {\n\t\tparsedError = &Error{\n\t\t\tErr:  err,\n\t\t\tType: ErrorTypePrivate,\n\t\t}\n\t}\n\n\tc.Errors = append(c.Errors, parsedError)\n\treturn parsedError\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"set",children:"Set"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Set is used to store a new key/value pair exclusively for this context.\n// It also lazy initializes  c.Keys if it was not used previously.\nfunc (c *Context) Set(key string, value any) {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\tif c.Keys == nil {\n\t\tc.Keys = make(map[string]any)\n\t}\n\n\tc.Keys[key] = value\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"get",children:"Get"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Get returns the value for the given key, ie: (value, true).\n// If the value does not exist it returns (nil, false)\nfunc (c *Context) Get(key string) (value any, exists bool) {\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\tvalue, exists = c.Keys[key]\n\treturn\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"getstring",children:"GetString"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// GetString returns the value associated with the key as a string.\nfunc (c *Context) GetString(key string) (s string) {\n\tif val, ok := c.Get(key); ok && val != nil {\n\t\ts, _ = val.(string)\n\t}\n\treturn\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"deadline",children:"Deadline"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Deadline returns that there is no deadline (ok==false) when c.Request has no Context.\nfunc (c *Context) Deadline() (deadline time.Time, ok bool) {\n\tif !c.hasRequestContext() {\n\t\treturn\n\t}\n\treturn c.Request.Context().Deadline()\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"done",children:"Done"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Done returns nil (chan which will wait forever) when c.Request has no Context.\nfunc (c *Context) Done() <-chan struct{} {\n\tif !c.hasRequestContext() {\n\t\treturn nil\n\t}\n\treturn c.Request.Context().Done()\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"value",children:"Value"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Value returns the value associated with this context for key, or nil\n// if no value is associated with key. Successive calls to Value with\n// the same key returns the same result.\nfunc (c *Context) Value(key any) any {\n\tif key == 0 {\n\t\treturn c.Request\n\t}\n\tif key == ContextKey {\n\t\treturn c\n\t}\n\tif keyAsString, ok := key.(string); ok {\n\t\tif val, exists := c.Get(keyAsString); exists {\n\t\t\treturn val\n\t\t}\n\t}\n\tif !c.hasRequestContext() {\n\t\treturn nil\n\t}\n\treturn c.Request.Context().Value(key)\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(96540);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);