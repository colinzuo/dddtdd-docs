"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[4063],{70519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=t(74848),r=t(28453);const o={},s="TransitionGroup",a={id:"frontend/vue3/core/built-ins/transition-group",title:"TransitionGroup",description:"Differences from ``",source:"@site/docs/00200-frontend/vue3/010-core/014-built-ins/020-transition-group.md",sourceDirName:"00200-frontend/vue3/010-core/014-built-ins",slug:"/frontend/vue3/core/built-ins/transition-group",permalink:"/dddtdd-docs/frontend/vue3/core/built-ins/transition-group",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:20,frontMatter:{},sidebar:"docSidebar",previous:{title:"Transition",permalink:"/dddtdd-docs/frontend/vue3/core/built-ins/transition"},next:{title:"KeepAlive",permalink:"/dddtdd-docs/frontend/vue3/core/built-ins/keep-alive"}},l={},d=[{value:"Differences from <code>&lt;Transition&gt;</code>",id:"differences-from-transition",level:2},{value:"Enter / Leave Transitions",id:"enter--leave-transitions",level:2},{value:"Move Transitions",id:"move-transitions",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"transitiongroup",children:"TransitionGroup"}),"\n",(0,i.jsxs)(n.h2,{id:"differences-from-transition",children:["Differences from ",(0,i.jsx)(n.code,{children:"<Transition>"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["By default, it doesn't render a wrapper element. But you can specify an element to be rendered with the ",(0,i.jsx)(n.code,{children:"tag"})," prop"]}),"\n",(0,i.jsxs)(n.li,{children:["Elements inside are always required to have a unique ",(0,i.jsx)(n.code,{children:"key"})," attribute"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"enter--leave-transitions",children:"Enter / Leave Transitions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<TransitionGroup name="list" tag="ul">\r\n  <li v-for="item in items" :key="item">\r\n    {{ item }}\r\n  </li>\r\n</TransitionGroup>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"move-transitions",children:"Move Transitions"}),"\n",(0,i.jsx)(n.p,{children:'The above demo has some obvious flaws: when an item is inserted or removed, its surrounding items instantly "jump" into place instead of moving smoothly'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".list-move, /* apply transition to moving elements */\r\n.list-enter-active,\r\n.list-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.list-enter-from,\r\n.list-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(30px);\r\n}\r\n\r\n/* ensure leaving items are taken out of layout flow so that moving\r\n   animations can be calculated correctly. */\r\n.list-leave-active {\r\n  position: absolute;\r\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);