"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[4633],{8848:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var c=i(74848),t=i(28453);const r={},o="KeepAlive",d={id:"frontend/vue3/core/built-ins/keep-alive",title:"KeepAlive",description:"Basic Usage",source:"@site/docs/00200-frontend/vue3/010-core/014-built-ins/030-keep-alive.md",sourceDirName:"00200-frontend/vue3/010-core/014-built-ins",slug:"/frontend/vue3/core/built-ins/keep-alive",permalink:"/dddtdd-docs/frontend/vue3/core/built-ins/keep-alive",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:30,frontMatter:{},sidebar:"docSidebar",previous:{title:"TransitionGroup",permalink:"/dddtdd-docs/frontend/vue3/core/built-ins/transition-group"},next:{title:"Teleport",permalink:"/dddtdd-docs/frontend/vue3/core/built-ins/teleport"}},s={},l=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Include / Exclude",id:"include--exclude",level:2},{value:"Lifecycle of Cached Instance",id:"lifecycle-of-cached-instance",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"keepalive",children:"KeepAlive"}),"\n",(0,c.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'\x3c!-- Inactive components will be cached! --\x3e\r\n<KeepAlive>\r\n  <component :is="activeComponent" />\r\n</KeepAlive>\n'})}),"\n",(0,c.jsx)(n.h2,{id:"include--exclude",children:"Include / Exclude"}),"\n",(0,c.jsxs)(n.p,{children:["By default, ",(0,c.jsx)(n.code,{children:"<KeepAlive>"})," will cache any component instance inside. We can customize this behavior via the ",(0,c.jsx)(n.code,{children:"include"})," and ",(0,c.jsx)(n.code,{children:"exclude"})," props. Both props can be a comma-delimited string, a ",(0,c.jsx)(n.code,{children:"RegExp"}),", or an array containing either types"]}),"\n",(0,c.jsxs)(n.p,{children:["The match is checked against the component's ",(0,c.jsx)(n.code,{children:"name"})," option"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'\x3c!-- comma-delimited string --\x3e\r\n<KeepAlive include="a,b">\r\n  <component :is="view" />\r\n</KeepAlive>\r\n\r\n\x3c!-- regex (use `v-bind`) --\x3e\r\n<KeepAlive :include="/a|b/">\r\n  <component :is="view" />\r\n</KeepAlive>\r\n\r\n\x3c!-- Array (use `v-bind`) --\x3e\r\n<KeepAlive :include="[\'a\', \'b\']">\r\n  <component :is="view" />\r\n</KeepAlive>\n'})}),"\n",(0,c.jsx)(n.h2,{id:"lifecycle-of-cached-instance",children:"Lifecycle of Cached Instance"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["Both hooks work for not only the root component cached by ",(0,c.jsx)(n.code,{children:"<KeepAlive>"}),", but also the descendant components in the cached tree"]}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"<script setup>\r\nimport { onActivated, onDeactivated } from 'vue'\r\n\r\nonActivated(() => {\r\n  // called on initial mount\r\n  // and every time it is re-inserted from the cache\r\n})\r\n\r\nonDeactivated(() => {\r\n  // called when removed from the DOM into the cache\r\n  // and also when unmounted\r\n})\r\n<\/script>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var c=i(96540);const t={},r=c.createContext(t);function o(e){const n=c.useContext(r);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),c.createElement(r.Provider,{value:n},e.children)}}}]);