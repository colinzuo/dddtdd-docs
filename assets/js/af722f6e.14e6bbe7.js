"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[5126],{40591:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var i=t(74848),l=t(28453);const s={title:"Object Implementation Support"},c=void 0,r={id:"programming-languages/python/c-api/objimpl",title:"Object Implementation Support",description:"- Allocating Objects on the Heap",source:"@site/docs/00400-programming-languages/python/c-api/1150-objimpl.md",sourceDirName:"00400-programming-languages/python/c-api",slug:"/programming-languages/python/c-api/objimpl",permalink:"/dddtdd-docs/programming-languages/python/c-api/objimpl",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:1150,frontMatter:{title:"Object Implementation Support"},sidebar:"docSidebar",previous:{title:"Memory Management",permalink:"/dddtdd-docs/programming-languages/python/c-api/memory"},next:{title:"Allocating Objects on the Heap",permalink:"/dddtdd-docs/programming-languages/python/c-api/allocation"}},o={},a=[];function d(e){const n={li:"li",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Allocating Objects on the Heap"}),"\n",(0,i.jsxs)(n.li,{children:["Common Object Structures","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Base object types and macros"}),"\n",(0,i.jsx)(n.li,{children:"Implementing functions and methods"}),"\n",(0,i.jsx)(n.li,{children:"Accessing attributes of extension types"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Type Objects","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quick Reference","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u201ctp slots\u201d"}),"\n",(0,i.jsx)(n.li,{children:"sub-slots"}),"\n",(0,i.jsx)(n.li,{children:"slot typedefs"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"PyTypeObject Definition"}),"\n",(0,i.jsx)(n.li,{children:"PyObject Slots"}),"\n",(0,i.jsx)(n.li,{children:"PyVarObject Slots"}),"\n",(0,i.jsx)(n.li,{children:"PyTypeObject Slots"}),"\n",(0,i.jsx)(n.li,{children:"Static Types"}),"\n",(0,i.jsx)(n.li,{children:"Heap Types"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Number Object Structures"}),"\n",(0,i.jsx)(n.li,{children:"Mapping Object Structures"}),"\n",(0,i.jsx)(n.li,{children:"Sequence Object Structures"}),"\n",(0,i.jsx)(n.li,{children:"Buffer Object Structures"}),"\n",(0,i.jsx)(n.li,{children:"Async Object Structures"}),"\n",(0,i.jsx)(n.li,{children:"Slot Type typedefs"}),"\n",(0,i.jsx)(n.li,{children:"Examples"}),"\n",(0,i.jsxs)(n.li,{children:["Supporting Cyclic Garbage Collection","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Controlling the Garbage Collector State"}),"\n"]}),"\n"]}),"\n"]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(96540);const l={},s=i.createContext(l);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);