"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[4743],{75319:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=t(74848),r=t(28453);const o={},i="Testing Your App",l={id:"frontend/cypress/end-to-end-testing/testing-your-app",title:"Testing Your App",description:"What you'll learn",source:"@site/docs/00200-frontend/cypress/030-end-to-end-testing/020-testing-your-app.md",sourceDirName:"00200-frontend/cypress/030-end-to-end-testing",slug:"/frontend/cypress/end-to-end-testing/testing-your-app",permalink:"/dddtdd-docs/frontend/cypress/end-to-end-testing/testing-your-app",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1721530274e3,sidebarPosition:20,frontMatter:{},sidebar:"docSidebar",previous:{title:"Your First Test with Cypress",permalink:"/dddtdd-docs/frontend/cypress/end-to-end-testing/writing-your-first-end-to-end-test"},next:{title:"Cypress Component Testing",permalink:"/dddtdd-docs/frontend/cypress/component-testing/overview"}},a={},d=[{value:"What you&#39;ll learn",id:"what-youll-learn",level:2},{value:"Step 1: Start your server",id:"step-1-start-your-server",level:2},{value:"Step 2: Visit your server",id:"step-2-visit-your-server",level:2},{value:"Step 3: Configure Cypress",id:"step-3-configure-cypress",level:2},{value:"Testing strategies",id:"testing-strategies",level:2},{value:"Seeding data",id:"seeding-data",level:3},{value:"Stubbing the server",id:"stubbing-the-server",level:3},{value:"Write a single e2e test without stubs, and then stub the rest",id:"write-a-single-e2e-test-without-stubs-and-then-stub-the-rest",level:4},{value:"Logging in",id:"logging-in",level:3},{value:"Fully test the login flow -- but only once!",id:"fully-test-the-login-flow----but-only-once",level:4},{value:"Reusing the login code",id:"reusing-the-login-code",level:4},{value:"Improving performance",id:"improving-performance",level:4}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"testing-your-app",children:"Testing Your App"}),"\n",(0,s.jsx)(n.h2,{id:"what-youll-learn",children:"What you'll learn"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The relationship between Cypress and your back end"}),"\n",(0,s.jsx)(n.li,{children:"How to configure Cypress to fit your app"}),"\n",(0,s.jsx)(n.li,{children:"Working with (or without!) your authentication mechanism"}),"\n",(0,s.jsx)(n.li,{children:"Effectively leveraging test data"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-1-start-your-server",children:"Step 1: Start your server"}),"\n",(0,s.jsxs)(n.p,{children:["Assuming you've successfully installed Cypress and opened Cypress in your project, the first thing you'll want to do is ",(0,s.jsx)(n.strong,{children:"start your local development server"})," that hosts the application"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Many of our users run the ",(0,s.jsx)(n.strong,{children:"majority"})," of their integration tests against a local development server, but then reserve a ",(0,s.jsx)(n.strong,{children:"smaller set of smoke tests"})," that run only against a deployed production app"]})}),"\n",(0,s.jsx)(n.h2,{id:"step-2-visit-your-server",children:"Step 2: Visit your server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"describe('The Home Page', () => {\r\n  it('successfully loads', () => {\r\n    cy.visit('http://localhost:8080') // change URL to match your dev URL\r\n  })\r\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-3-configure-cypress",children:"Step 3: Configure Cypress"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="cypress.config.ts"',children:"import { defineConfig } from 'cypress'\r\n\r\nexport default defineConfig({\r\n  e2e: {\r\n    baseUrl: 'http://localhost:8080',\r\n  },\r\n})\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"describe('The Home Page', () => {\r\n  it('successfully loads', () => {\r\n    cy.visit('/')\r\n  })\r\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing-strategies",children:"Testing strategies"}),"\n",(0,s.jsx)(n.p,{children:"modern web testing has a few wrinkles that every team experiences, so here are some quick tips on common situations you're likely to run into"}),"\n",(0,s.jsx)(n.h3,{id:"seeding-data",children:"Seeding data"}),"\n",(0,s.jsxs)(n.p,{children:["Traditionally when writing ",(0,s.jsx)(n.code,{children:"e2e"})," tests using Selenium, before you automate the browser you do some kind of ",(0,s.jsx)(n.strong,{children:"set up and tear down"})," on the server."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"While there is a lot more to this strategy, you generally have three ways to facilitate this with Cypress"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cy.exec()"})," - to run system commands"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cy.task()"})," - to run code in Node via the setupNodeEvents function"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cy.request()"})," - to make HTTP requests"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"describe('The Home Page', () => {\r\n  beforeEach(() => {\r\n    // reset and seed the database prior to every test\r\n    cy.exec('npm run db:reset && npm run db:seed')\r\n\r\n    // seed a post in the DB that we control from our tests\r\n    cy.request('POST', '/test/seed/post', {\r\n      title: 'First Post',\r\n      authorId: 1,\r\n      body: '...',\r\n    })\r\n\r\n    // seed a user in the DB that we can control from our tests\r\n    cy.request('POST', '/test/seed/user', { name: 'Jane' })\r\n      .its('body')\r\n      .as('currentUser')\r\n  })\r\n\r\n  it('successfully loads', () => {\r\n    // this.currentUser will now point to the response\r\n    // body of the cy.request() that we could use\r\n    // to log in or work with in some way\r\n\r\n    cy.visit('/')\r\n  })\r\n})\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"With Cypress, there are several other approaches that can offer an arguably better and faster experience"})}),"\n",(0,s.jsx)(n.h3,{id:"stubbing-the-server",children:"Stubbing the server"}),"\n",(0,s.jsxs)(n.p,{children:["Another upside is that this enables you to ",(0,s.jsx)(n.strong,{children:"build out your application"})," without needing the contract of the server to exist"]}),"\n",(0,s.jsx)(n.h4,{id:"write-a-single-e2e-test-without-stubs-and-then-stub-the-rest",children:"Write a single e2e test without stubs, and then stub the rest"}),"\n",(0,s.jsxs)(n.p,{children:["Another more balanced approach is to integrate both strategies. You likely want to have a single test that takes a ",(0,s.jsx)(n.strong,{children:"true e2e approach and stubs nothing"}),". It'll use the feature for real - including seeding the database and setting up state"]}),"\n",(0,s.jsxs)(n.p,{children:["Once you've established it's working you can then ",(0,s.jsx)(n.strong,{children:"use stubs to test all of the edge cases and additional scenarios"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["We ",(0,s.jsx)(n.strong,{children:"recommend"})," that the vast majority of tests use stub data. They will be orders of magnitude faster, and much less complex"]}),"\n",(0,s.jsx)(n.h3,{id:"logging-in",children:"Logging in"}),"\n",(0,s.jsx)(n.h4,{id:"fully-test-the-login-flow----but-only-once",children:"Fully test the login flow -- but only once!"}),"\n",(0,s.jsxs)(n.p,{children:["Logging in is one of those features that are ",(0,s.jsx)(n.strong,{children:"mission critical"})," and should likely involve your server. We ",(0,s.jsx)(n.strong,{children:"recommend"})," you test signup and login using your UI as a real user would"]}),"\n",(0,s.jsx)(n.h4,{id:"reusing-the-login-code",children:"Reusing the login code"}),"\n",(0,s.jsxs)(n.p,{children:["A much better solution is to write a custom ",(0,s.jsx)(n.code,{children:"cy.login()"})," command."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// In cypress/support/commands.js\r\n\r\nCypress.Commands.add('login', (username, password) => {\r\n  cy.visit('/login')\r\n\r\n  cy.get('input[name=username]').type(username)\r\n\r\n  // {enter} causes the form to submit\r\n  cy.get('input[name=password]').type(`${password}{enter}`, { log: false })\r\n\r\n  // we should be redirected to /dashboard\r\n  cy.url().should('include', '/dashboard')\r\n\r\n  // our auth cookie should be present\r\n  cy.getCookie('your-session-cookie').should('exist')\r\n\r\n  // UI should reflect this user being logged in\r\n  cy.get('h1').should('contain', username)\r\n})\r\n\r\n// In your spec file\r\n\r\nit('does something on a secured page', function () {\r\n  const { username, password } = this.currentUser\r\n  cy.login(username, password)\r\n\r\n  // ...rest of test\r\n})\n"})}),"\n",(0,s.jsx)(n.h4,{id:"improving-performance",children:"Improving performance"}),"\n",(0,s.jsxs)(n.p,{children:["Luckily, Cypress provides the ",(0,s.jsx)(n.code,{children:"cy.session()"})," command, a powerful performance tool that lets you ",(0,s.jsx)(n.strong,{children:"cache the browser context"})," associated with your user and reuse it for multiple tests without going through multiple login flows"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Cypress.Commands.add('login', (username, password) => {\r\n  cy.session(\r\n    username,\r\n    () => {\r\n      cy.visit('/login')\r\n      cy.get('input[name=username]').type(username)\r\n      cy.get('input[name=password]').type(`${password}{enter}`, { log: false })\r\n      cy.url().should('include', '/dashboard')\r\n      cy.get('h1').should('contain', username)\r\n    },\r\n    {\r\n      validate: () => {\r\n        cy.getCookie('your-session-cookie').should('exist')\r\n      },\r\n    }\r\n  )\r\n})\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);