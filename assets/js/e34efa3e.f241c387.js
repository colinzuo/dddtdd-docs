"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[6749],{39318:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(74848),r=s(28453);const i={},c="Mocking",o={id:"frontend/vue3/vitest/mocking",title:"Mocking",description:"You can import { vi } from 'vitest' or access it globally (when global configuration is enabled)",source:"@site/docs/00200-frontend/vue3/050-vitest/060-mocking.md",sourceDirName:"00200-frontend/vue3/050-vitest",slug:"/frontend/vue3/vitest/mocking",permalink:"/dddtdd-docs/frontend/vue3/vitest/mocking",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1721530274e3,sidebarPosition:60,frontMatter:{},sidebar:"docSidebar",previous:{title:"Test Filtering",permalink:"/dddtdd-docs/frontend/vue3/vitest/filtering"},next:{title:"Debugging",permalink:"/dddtdd-docs/frontend/vue3/vitest/debugging"}},a={},l=[{value:"Dates",id:"dates",level:2},{value:"Functions",id:"functions",level:2},{value:"Timers",id:"timers",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"mocking",children:"Mocking"}),"\n",(0,t.jsxs)(n.p,{children:["You can ",(0,t.jsx)(n.code,{children:"import { vi } from 'vitest'"})," or access it ",(0,t.jsx)(n.strong,{children:"globally"})," (when global configuration is enabled)"]}),"\n",(0,t.jsx)(n.h2,{id:"dates",children:"Dates"}),"\n",(0,t.jsxs)(n.p,{children:["Vitest uses ",(0,t.jsx)(n.a,{href:"https://github.com/sinonjs/fake-timers",children:"@sinonjs/fake-timers"})," package for manipulating timers, as well as system date"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.useFakeTimers()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.setSystemTime(date)"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { afterEach, beforeEach, describe, expect, it, vi } from 'vitest'\r\n\r\nconst businessHours = [9, 17]\r\n\r\nconst purchase = () => {\r\n  const currentHour = new Date().getHours()\r\n  const [open, close] = businessHours\r\n\r\n  if (currentHour > open && currentHour < close)\r\n    return { message: 'Success' }\r\n\r\n  return { message: 'Error' }\r\n}\r\n\r\ndescribe('purchasing flow', () => {\r\n  beforeEach(() => {\r\n    // tell vitest we use mocked time\r\n    vi.useFakeTimers()\r\n  })\r\n\r\n  afterEach(() => {\r\n    // restoring date after each test run\r\n    vi.useRealTimers()\r\n  })\r\n\r\n  it('allows purchases within business hours', () => {\r\n    // set hour within business hours\r\n    const date = new Date(2000, 1, 1, 13)\r\n    vi.setSystemTime(date)\r\n\r\n    // access Date.now() will result in the date set above\r\n    expect(purchase()).toEqual({ message: 'Success' })\r\n  })\r\n\r\n  it('disallows purchases outside of business hours', () => {\r\n    // set hour outside business hours\r\n    const date = new Date(2000, 1, 1, 19)\r\n    vi.setSystemTime(date)\r\n\r\n    // access Date.now() will result in the date set above\r\n    expect(purchase()).toEqual({ message: 'Error' })\r\n  })\r\n})\r\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsxs)(n.p,{children:["However spies can only help you spy on functions, they are not able to alter the implementation\r\nof those functions. In the case where we do need to create a fake (or mocked) version of a function we can use ",(0,t.jsx)(n.code,{children:"vi.fn()"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"const spy = vi.spyOn(messages, 'getLatest')"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"spy.mockImplementationOnce"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.restoreAllMocks()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"const mock = vi.fn().mockImplementation(getLatest)"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { afterEach, describe, expect, it, vi } from 'vitest'\r\n\r\nconst getLatest = (index = messages.items.length - 1) => messages.items[index]\r\n\r\nconst messages = {\r\n  items: [\r\n    { message: 'Simple test message', from: 'Testman' },\r\n    // ...\r\n  ],\r\n  getLatest, // can also be a `getter or setter if supported`\r\n}\r\n\r\ndescribe('reading messages', () => {\r\n  afterEach(() => {\r\n    vi.restoreAllMocks()\r\n  })\r\n\r\n  it('should get the latest message with a spy', () => {\r\n    const spy = vi.spyOn(messages, 'getLatest')\r\n    expect(spy.getMockName()).toEqual('getLatest')\r\n\r\n    expect(messages.getLatest()).toEqual(\r\n      messages.items[messages.items.length - 1],\r\n    )\r\n\r\n    expect(spy).toHaveBeenCalledTimes(1)\r\n\r\n    spy.mockImplementationOnce(() => 'access-restricted')\r\n    expect(messages.getLatest()).toEqual('access-restricted')\r\n\r\n    expect(spy).toHaveBeenCalledTimes(2)\r\n  })\r\n\r\n  it('should get with a mock', () => {\r\n    const mock = vi.fn().mockImplementation(getLatest)\r\n\r\n    expect(mock()).toEqual(messages.items[messages.items.length - 1])\r\n    expect(mock).toHaveBeenCalledTimes(1)\r\n\r\n    mock.mockImplementationOnce(() => 'access-restricted')\r\n    expect(mock()).toEqual('access-restricted')\r\n\r\n    expect(mock).toHaveBeenCalledTimes(2)\r\n\r\n    expect(mock()).toEqual(messages.items[messages.items.length - 1])\r\n    expect(mock).toHaveBeenCalledTimes(3)\r\n  })\r\n})\r\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"timers",children:"Timers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.useFakeTimers()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.restoreAllMocks()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.runAllTimers()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.advanceTimersByTime(2)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"vi.advanceTimersToNextTimer()"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var t=s(96540);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);