"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[1473],{53600:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(74848),r=t(28453);const o={title:"Spring Cloud Sleuth"},s=void 0,a={id:"topic/distributed-tracing/spring-cloud-sleuth",title:"Spring Cloud Sleuth",description:"https://github.com/openzipkin/brave",source:"@site/docs/00800-topic/distributed-tracing/spring-cloud-sleuth.md",sourceDirName:"00800-topic/distributed-tracing",slug:"/topic/distributed-tracing/spring-cloud-sleuth",permalink:"/dddtdd-docs/topic/distributed-tracing/spring-cloud-sleuth",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,frontMatter:{title:"Spring Cloud Sleuth"},sidebar:"docSidebar",previous:{title:"\u5206\u5e03\u5f0ftracing\u4ecb\u7ecd",permalink:"/dddtdd-docs/topic/distributed-tracing/"},next:{title:"Zipkin\u4ecb\u7ecd",permalink:"/dddtdd-docs/topic/distributed-tracing/zipkin/"}},d={},c=[{value:"add new span",id:"add-new-span",level:2}];function p(n){const e={a:"a",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://github.com/openzipkin/brave",children:"https://github.com/openzipkin/brave"}),(0,i.jsx)(e.br,{}),"\n",(0,i.jsx)(e.a,{href:"https://www.baeldung.com/spring-cloud-sleuth-single-application",children:"https://www.baeldung.com/spring-cloud-sleuth-single-application"}),(0,i.jsx)(e.br,{}),"\n",(0,i.jsx)(e.a,{href:"https://www.baeldung.com/tracing-services-with-zipkin",children:"https://www.baeldung.com/tracing-services-with-zipkin"})]}),"\n",(0,i.jsx)(e.h2,{id:"add-new-span",children:"add new span"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Autowired\nprivate Tracer tracer;\n// ...\npublic void doSomeWorkNewSpan() throws InterruptedException {\n    logger.info("I\'m in the original span");\n\n    Span newSpan = tracer.nextSpan().name("newSpan").start();\n    try (SpanInScope ws = tracer.withSpanInScope(newSpan.start())) {\n        Thread.sleep(1000L);\n        logger.info("I\'m in the new span doing some cool work that needs its own span");\n    } finally {\n        newSpan.finish();\n    }\n\n    logger.info("I\'m in the original span");\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var i=t(96540);const r={},o=i.createContext(r);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);