"use strict";(self.webpackChunkdoc_center=self.webpackChunkdoc_center||[]).push([[3371],{61725:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var i=t(74848),o=t(28453);const s={},r="Component Events",d={id:"frontend/vue3/core/components-in-depth/events",title:"Component Events",description:"Emitting and Listening to Events",source:"@site/docs/00200-frontend/vue3/010-core/012-components-in-depth/030-events.md",sourceDirName:"00200-frontend/vue3/010-core/012-components-in-depth",slug:"/frontend/vue3/core/components-in-depth/events",permalink:"/dddtdd-docs/frontend/vue3/core/components-in-depth/events",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Colin Zuo",lastUpdatedAt:1720187019e3,sidebarPosition:30,frontMatter:{},sidebar:"docSidebar",previous:{title:"Props",permalink:"/dddtdd-docs/frontend/vue3/core/components-in-depth/props"},next:{title:"Component v-model",permalink:"/dddtdd-docs/frontend/vue3/core/components-in-depth/component-v-model"}},c={},a=[{value:"Emitting and Listening to Events",id:"emitting-and-listening-to-events",level:2},{value:"Event Arguments",id:"event-arguments",level:2},{value:"Declaring Emitted Events",id:"declaring-emitted-events",level:2},{value:"Events Validation",id:"events-validation",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"component-events",children:"Component Events"}),"\n",(0,i.jsx)(n.h2,{id:"emitting-and-listening-to-events",children:"Emitting and Listening to Events"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'\x3c!-- MyComponent --\x3e\r\n<button @click="$emit(\'someEvent\')">Click Me</button>\r\n\r\n<MyComponent @some-event="callback" />\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Unlike native DOM events, component emitted events do not bubble. You can only listen to the events emitted by a direct child component. If there is a need to communicate between sibling or deeply nested components, use an external event bus or a global state management solution."})}),"\n",(0,i.jsx)(n.h2,{id:"event-arguments",children:"Event Arguments"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["All extra arguments passed to ",(0,i.jsx)(n.code,{children:"$emit()"})," after the event name will be forwarded to the listener. For example, with ",(0,i.jsx)(n.code,{children:"$emit('foo', 1, 2, 3)"})," the listener function will receive three arguments"]})}),"\n",(0,i.jsx)(n.h2,{id:"declaring-emitted-events",children:"Declaring Emitted Events"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"<script setup lang=\"ts\">\r\nconst emit = defineEmits<{\r\n  (e: 'change', id: number): void\r\n  (e: 'update', value: string): void\r\n}>()\r\n<\/script>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"events-validation",children:"Events Validation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"<script setup>\r\nconst emit = defineEmits({\r\n  // No validation\r\n  click: null,\r\n\r\n  // Validate submit event\r\n  submit: ({ email, password }) => {\r\n    if (email && password) {\r\n      return true\r\n    } else {\r\n      console.warn('Invalid submit event payload!')\r\n      return false\r\n    }\r\n  }\r\n})\r\n\r\nfunction submitForm(email, password) {\r\n  emit('submit', { email, password })\r\n}\r\n<\/script>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);